(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{489:function(s,a,n){"use strict";n.r(a);var e=n(2),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),n("p",[s._v("随着公司业务的发展，经常会收到一些数据大屏的需求。目前做了有两种实现方案，一是人肉搭建，二是用阿里云 DataV 搭建。")]),s._v(" "),n("p",[s._v("人肉搭建，在本地脚手架开发环境中进行编码，有大量的重复劳动，能力复用性差，占用前端宝贵的开发时间。")]),s._v(" "),n("p",[s._v("DataV 功能强大，但需要付费使用，且好用的组件还要额外收费，不支持本地化部署，还需要维护两套数仓。")]),s._v(" "),n("h2",{attrs:{id:"自己做一套系统的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自己做一套系统的优势"}},[s._v("#")]),s._v(" 自己做一套系统的优势")]),s._v(" "),n("ul",[n("li",[s._v("可定制性：内部产品，组件和展示形式私人订制")]),s._v(" "),n("li",[s._v("支持本地化部署：业务需要决定部分业务只能在内网访问，无法访问外网（包括阿里云）")]),s._v(" "),n("li",[s._v("解决 DataV 需要维护两套数仓的问题")]),s._v(" "),n("li",[s._v("节约公司成本，增强公司数据产品能力，助力营收")])]),s._v(" "),n("h2",{attrs:{id:"总览"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总览"}},[s._v("#")]),s._v(" 总览")]),s._v(" "),n("p",[s._v("数据大屏是用可视化的方式展示庞杂数据的产品，经常会用在会议展览、业务监控、风险预警、地理信息分析等多种业务场景。下图是阿里云 DataV 的一个模板：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/vzEib9IRhZD61zStZ9X7rlHibay4XuXwR5aB5vj5BC8WCmy2iaz7GKm1QBZn0AJSDETbX0YG7l78JzITWQUTBdhag/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),s._v(" "),n("p",[n("strong",[s._v("从前端实现来看，大屏是由线图、柱状图、饼图、标题、背景、边框等基本元素组成。实现思路是以这些基本元素为组件，通过选择组件、拖拽方式布局，配置样式、数据来源，将这些数据保存在数据库中。展示页面获取依赖的组件、样式和数据信息，呈现给用户。")])]),s._v(" "),n("p",[s._v("大屏按场景划分，可分为编辑和查看。")]),s._v(" "),n("p",[s._v("编辑：指的是大屏制作者制作大屏。")]),s._v(" "),n("p",[s._v("查看：包含两种情况，大屏制作者预览和实际用户查看大屏。")]),s._v(" "),n("h2",{attrs:{id:"编辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编辑"}},[s._v("#")]),s._v(" 编辑")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/vzEib9IRhZD61zStZ9X7rlHibay4XuXwR5fh1xdyicLU2QGjR3icXqQ2fK1n7L7QicReLqf0hadNgzPJuBIic9Uxl2Lw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1",alt:"img"}})]),s._v(" "),n("p",[s._v("编辑大屏是数据可视化系统核心，页面布局参考 DataV：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/vzEib9IRhZD61zStZ9X7rlHibay4XuXwR5mbI6F1AN2mBr030svLQtARwXxEYugUuYjpXUpvNGPiacet1WGlA9GiaA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),s._v(" "),n("p",[s._v("拆解为 4 个部分：顶部、组件区、画布、数据配置区。先讲下设计思路，再依次分解各区。")]),s._v(" "),n("h4",{attrs:{id:"设计思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计思路"}},[s._v("#")]),s._v(" 设计思路")]),s._v(" "),n("ul",[n("li",[s._v("页面数据和依赖的组件由 SSR (https://juejin.im/post/5b063962f265da0ddb63dac3) 注入到 HTML 文件中")]),s._v(" "),n("li",[s._v("App 数据保存在 App state 中，未使用 Vuex（后续会考虑使用 Vuex）")]),s._v(" "),n("li",[s._v("数据用 props 传递给子组件")]),s._v(" "),n("li",[s._v("数据从子组件采用事件中心传递给祖父级组件")])]),s._v(" "),n("h4",{attrs:{id:"顶部"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顶部"}},[s._v("#")]),s._v(" 顶部")]),s._v(" "),n("p",[s._v("顶部区域包含三部分：左侧开关区、控制图层、组件列表、数据配置区的显示隐藏；中间是大屏的标题；右侧是保存和预览。")]),s._v(" "),n("h4",{attrs:{id:"组件区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件区"}},[s._v("#")]),s._v(" 组件区")]),s._v(" "),n("p",[s._v("组件区分为左侧图层（已添加的组件）和右侧组件列表，具备添加组件、选择操作图层、分组对齐的功能。")]),s._v(" "),n("p",[n("strong",[s._v("图层")])]),s._v(" "),n("ul",[n("li",[s._v("图层支持上移、下移、置顶、删除的操作，支持右键显示操作菜单（暂不支持多选和分组）。实现原理是使用数组的基本方法改变数组")]),s._v(" "),n("li",[s._v("单击组件选择该组件，画布区选中组件，数据配置区显示配置项")])]),s._v(" "),n("p",[n("strong",[s._v("组件列表")])]),s._v(" "),n("ul",[n("li",[s._v("所有组件展示所有大屏组件，点击或拖动添加组件")]),s._v(" "),n("li",[s._v("添加组件采用异步获取组件的 JS、CSS 、配置 Schema，将 CSS、JS 插入 DOM 中，配置传入属性配置区")]),s._v(" "),n("li",[s._v("支持按组件类型分组，便于用户使用。")])]),s._v(" "),n("h4",{attrs:{id:"画布"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#画布"}},[s._v("#")]),s._v(" 画布")]),s._v(" "),n("p",[s._v("画布用于实时展示大屏组件的位置、尺寸、属性和数据修改后的效果。")]),s._v(" "),n("p",[s._v("位置和尺寸改变通过注册组件 "),n("code",[s._v("vue-draggable-resizable")]),s._v(" 的 "),n("code",[s._v("drag")]),s._v(" 和 "),n("code",[s._v("resize")]),s._v(" 方法，改变对应组件的属性。组件采用绝对定位，拖动时修改 top 和 left 的值。")]),s._v(" "),n("p",[s._v("属性改变通过修改对应组件的 props.models 的值修改。")]),s._v(" "),n("p",[s._v("数据分为静态数据和接口数据。启用静态数据时，数据从用户填写的数据获取。否则组件 watch 接口 id ，每次改变时重新发送请求获取数据。")]),s._v(" "),n("p",[s._v("画布上边和左边是标尺，画布缩放时标尺要跟随变动。在标尺上移动时显示一条移动的参考线。点击时增加一条参考线。双击参考线删除。标尺用 Canvas 画出，旋转 90 度可获得 Y 轴。")]),s._v(" "),n("p",[s._v("右下是缩放滑块，方便用户缩放查看。进入页面默认缩放到可查看全屏大小。缩放实现使用 CSS3 的"),n("code",[s._v("transform: scale(${this.scale})")]),s._v("。")]),s._v(" "),n("p",[s._v("画布上未选择组件时，显示页面的基本配置，包括大屏的宽高、背景图。")]),s._v(" "),n("p",[s._v("选择组件后，高亮显示当前组件，标识位置，右侧数据配置区显示组件 Schema 定义的配置项。")]),s._v(" "),n("p",[n("strong",[s._v("核心代码")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<div\n  v-for="item in preCompList"\n  :class="[\n    \'data-com\',\n    item.info.previewId === activePreviewId ? \'data-com-active\' : \'\'\n  ]"\n  :key="item.info.activePreviewId">\n  <vue-draggable-resizable\n    :w="item.models.width || 100"\n    :h="item.models.height || 100"\n    :x="item.models.x || 0"\n    :y="item.models.y || 0"\n    :active="item.info.previewId === activePreviewId"\n    @dragging="onDrag"\n    @resizing="onResize"\n    @activated="\n      () => {\n        onCompActivated(item.info.previewId);\n      }"\n      :prevent-deactivation="true">\n    <navigator-line\n      :x="item.models.x"\n      :y="item.models.y"\n      :scale="scale"\n    />\n    <div \n      :is="item.info.name" \n      :models="item.models" \n      :extraProps="extraProps">\n    </div>  \n  </vue-draggable-resizable>\n</div>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("vue-draggable-resizable (https://npm.taobao.org/package/vue-draggable-resizable) 用于选择组件、缩放组件大小，可参考官方文档。这个组件不支持分组和多选对齐场景，需要定制开发。")]),s._v(" "),n("p",[n("code",[s._v("navigator-line")]),s._v(" 显示组件当前的标尺位置。这里要注意避免因为画布缩小导致坐标看不清，除以缩放比例即可。")]),s._v(" "),n("p",[s._v("使用 Vue 动态组件 is (https://cn.vuejs.org/v2/api/#is) 控制组件显示。")]),s._v(" "),n("h4",{attrs:{id:"数据配置区"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据配置区"}},[s._v("#")]),s._v(" 数据配置区")]),s._v(" "),n("p",[s._v("数据配置区有 2 种情况：")]),s._v(" "),n("ul",[n("li",[s._v("未选中组件展示页面级配置：大屏宽高、背景色、背景图等")]),s._v(" "),n("li",[s._v("选中组件：展示组件配置信息")])]),s._v(" "),n("p",[s._v("实现逻辑：根据当前用户的选择来动态渲染出组件的属性编辑域，并回填属性的初始值，从而达到良好的编辑交互效果。用户拖拽组件时同步更新编辑域中的属性值，在属性编辑域修改属性时通知大屏触发组件的刷新动作，达到实时编辑的效果。")]),s._v(" "),n("p",[s._v("数据配置区界面由组件 Schema 定义，props 定义展示，models 表示默认数据，详细介绍见下面 Schema。")]),s._v(" "),n("p",[s._v("编辑类型由 fileds 里的 type 决定，实现 Input、Select、Image、Border 等各种类型组件，再利用 Vue 的动态组件 is 属性来展示。")]),s._v(" "),n("p",[s._v("数据回传：每个子组件值的修改会通知父组件 "),n("code",[s._v("<Setting />")]),s._v(" 更新回传给父组件 App，这里采用全量回传，避免 App 对 models 查找更新数据。")]),s._v(" "),n("h2",{attrs:{id:"查看"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[s._v("#")]),s._v(" 查看")]),s._v(" "),n("p",[s._v("查看是将数据库里保存的数据，配合组件渲染出来。实现原理是通过页面 id 获取组件、数据渲染。代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<div  class="preview">\n  <div class="layout">\n    <div\n      :class="[\n        \'preview-line\',\n        preComp.info.name + \'-\' + preComp.info.previewId\n      ]"\n      v-for="(preComp, index) in preCompList"\n      :key="preComp.info.previewId"\n      :style="formatCompStyle(preComp, index)"\n    >\n      <div \n       :is="preComp.info.name" \n       :models="preComp.models" \n       :isPreview="isPreview" \n       :extraProps="extraProps"></div>\n    </div>\n  </div>\n</div>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),n("h4",{attrs:{id:"-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[s._v("#")])]),s._v(" "),n("h4",{attrs:{id:"全屏展示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全屏展示"}},[s._v("#")]),s._v(" 全屏展示")]),s._v(" "),n("p",[s._v("需要注意大屏是全屏展示，根据大屏配置的屏幕宽高、背景图、背景色设置 body 样式，设置 "),n("code",[s._v('<meta name="viewport" content="width=\' + window.screen.width + \'"/>')]),s._v(" viewport 的 width 让屏幕占满全屏，再监听屏幕的变化设置压缩比例。自适应关键代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 获取设置的大屏宽高、背景图、背景色\nif (window.__INITIAL_STATE__) {\n  const { width, height, backgroundImage, backgroundColor } =\n        __INITIAL_STATE__.preview.pageConfig.models;\n  window.scr = {\n    width: width,\n    height: height,\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundColor: backgroundColor,\n  };\n} else {\n  window.scr = {\n    width: window.screen.width,\n    height: window.screen.height,\n  };\n}\n\n// 全屏展示\nfunction resizeFull() {\n  if (!window.scr.height || !window.scr.width) return resizeFullBak();\n  var ratioX = $(window).width() / window.scr.width;\n  var ratioY = $(window).height() / window.scr.height;\n  $(\'body\').css({\n    transform: "scale(" + ratioX + ", " + ratioY + ")",\n    transformOrigin: "left top",\n    backgroundSize: "100% 100%",\n  });\n}\nfunction resizeFullBak() {\n  var ratioX = $(window).width() / $(\'body\').width();\n  var ratioY = $(window).height() / $(\'body\').height();\n  $(\'body\').css({\n    transform: "scale(" + ratioX + ", " + ratioY + ")",\n    transformOrigin: "left top",\n    backgroundSize: "100% " + ratioY * 100 + "%",\n  });\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h2",{attrs:{id:"组件设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件设计"}},[s._v("#")]),s._v(" 组件设计")]),s._v(" "),n("p",[s._v("组件是整个大屏设计的基础。组件由组件模板来初始化，模板提供了两个主要功能，一是实现一个可开发的简单 Demo，二是提供打包发布功能。")]),s._v(" "),n("p",[s._v("模板代码很简单，通过传入的 props 控制组件的展示和业务逻辑。组件自动安装，这样在异步加载组件的时候页面可以识别组件。重点讲下组件的 Schema 设计。")]),s._v(" "),n("h4",{attrs:{id:"schema-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#schema-json"}},[s._v("#")]),s._v(" schema.json")]),s._v(" "),n("p",[s._v("schema.json 是用来定义组件的可编辑项和默认配置。决定组件哪些东西可以配置，配置的形式是什么样子的（Input、Select 等有默认值）。所以 Schema 包含 props 和 models 两个属性。")]),s._v(" "),n("p",[s._v("props: 数组，每个元素是 tab 的一项。info 是 tab 头部信息，fields 是配置项。fields 的 name 对应 models 的属性名，type 决定了配置的类型，title 是中文名。还可以定义其他属性，比如下拉框选择项、数字输入框最大最小值等。")]),s._v(" "),n("p",[s._v("models: 默认数据，"),n("code",[s._v("props.fileds")]),s._v(" 里每个 "),n("code",[s._v("name")]),s._v(" 的默认值。")]),s._v(" "),n("p",[s._v("下面是一个简单 Schema 的定义：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n  "props": [\n    {\n      "info": {\n        "title": "配置",\n        "icon": "icon-setting"\n      },\n      "fields": [\n        {\n          "title": "组件宽度",\n          "name": "width",\n          "description": "组件宽度",\n          "type": "number"\n        },\n        {\n          "title": "组件高度",\n          "name": "height",\n          "description": "组件高度",\n          "type": "number"\n        },\n        {\n          "title": "x轴坐标",\n          "name": "x",\n          "description": "组件x轴坐标",\n          "type": "number"\n        },\n        {\n          "title": "y轴坐标",\n          "name": "y",\n          "description": "组件y轴坐标",\n          "type": "number"\n        }\n      ]\n    }\n  ],\n  "models": {\n    "width": 300,\n    "height": 200,\n    "x": 0,\n    "y": 0\n  }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("h2",{attrs:{id:"碰到的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#碰到的问题"}},[s._v("#")]),s._v(" 碰到的问题")]),s._v(" "),n("h3",{attrs:{id:"通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通信"}},[s._v("#")]),s._v(" 通信")]),s._v(" "),n("p",[s._v("大屏组件之间如何通信？要确保大屏组件可以通信。")]),s._v(" "),n("p",[s._v("采用事件中心来处理组件间的通信。核心代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 全局事件中心\nVue.prototype.$eventBus = new Vue();\n// 触发, 在组件内部\nthis.$eventBus.$emit('eventName', '这里传值');\n// 监听, 获取值\nthis.$eventBus.on('eventName', v => {\n  console.log(v);\n})\n\n// 组件通知父组件区划变动或其他变动\nthis.$eventBus.$emit('component__update-extraProps', { dist: '选择的区划' });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("App 统一管理通信对象 extraProps，以 props 形式注入到每个组件。组件可以监听 "),n("code",[s._v("extraProps")]),s._v(" 的属性变化。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 组件代码\n{\n  ...,\n  props: {\n    extraProps: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  computed: {\n    dist() {\n      return (this.extraProps && this.extraProps.dist) || '';\n    }\n  },\n  watch: {\n    dist(val, oldVal){\n      // 添加区划改变时获取新数据的逻辑\n    }\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"权限"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[s._v("#")]),s._v(" 权限")]),s._v(" "),n("p",[s._v("大屏数据需要做权限控制，有权限的人才能查看大屏，而鲁班原来页面访问逻辑是没有权限的。实现方案是编辑、预览页面调用的免登接口访问中间 Server，中间 Server 实现登录，去 Server 请求数据。用户的查看页面内嵌鲁班 iframe，该地址由实际服务器提供并带上权限 token。访问该鲁班地址时先去 Server 鉴权，有权限返回大屏页面，否则返回 401。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/vzEib9IRhZD61zStZ9X7rlHibay4XuXwR5RlCAlCY1icib8ibJw636mWibAuKHaicy0SbxqgEpGaudRjRa2zQiaictdDZpQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"img"}})]),s._v(" "),n("h2",{attrs:{id:"待优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#待优化"}},[s._v("#")]),s._v(" 待优化")]),s._v(" "),n("p",[s._v("Big 处于初级阶段，还有好多地方需要完善：")]),s._v(" "),n("ul",[n("li",[s._v("分组：像 PS、Sketch 里一样分组，方便归类和操作")]),s._v(" "),n("li",[s._v("多选：多选后选择对齐方式。也是方便用户操作")]),s._v(" "),n("li",[s._v("代码优化")]),s._v(" "),n("li",[s._v("体验优化")])]),s._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("DT 时代，数据可视化将会越来越重要。相信有越来越多的同学会遇到大屏的场景。通过可视化搭建大屏系统，可以赋能相关的业务方，让非专业人士做出专业的大屏效果，同时满足公司的一些定制化需求。这里做了一个比较浅的大屏构建方案，目前还在开发阶段，希望抛砖引玉，有更多的可视化数据搭建方案分享出来，谢谢阅读。")])])}),[],!1,null,null,null);a.default=t.exports}}]);