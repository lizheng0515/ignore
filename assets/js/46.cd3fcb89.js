(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{378:function(t,_,v){"use strict";v.r(_);var r=v(2),s=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"im的扫码登录功能如何实现？主流的扫码登录技术原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#im的扫码登录功能如何实现？主流的扫码登录技术原理"}},[t._v("#")]),t._v(" IM的扫码登录功能如何实现？主流的扫码登录技术原理")]),t._v(" "),v("blockquote",[v("p",[t._v("本文引用了3位作者“精品唯居”、“  Yangfan2016”、“ MrYun”的部分文章内容，一并感谢。")])]),t._v(" "),v("h1",{attrs:{id:"_1、引言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、引言"}},[t._v("#")]),t._v(" 1、引言")]),t._v(" "),v("p",[t._v("扫码登录这个功能，最早应该是微信的PC端开始搞，虽然有点反人类的功能（不扫码也没别的方式登录），但不得不说还是很酷的。")]),t._v(" "),v("p",[v("strong",[t._v("下面这张图，不管是IM开发者还是普通用户，应该很熟悉：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108132833763-1040814278.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("于是，搞IM产品的老板和产品经理们，从此又多了一个要抛给程序员们的需求——“为什么微信有扫一扫登录，而我们的没有？”。")]),t._v(" "),v("p",[t._v("好吧，每次只要是微信有的功能，IM程序员们想甩锅，难度就有点大了，必竟老板们都都会想当然认为，微信有的“我”的IM产品里也得有。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108132852484-1223277281.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("既然无法回避，那就只能老老实实搞懂技术原理，然后自已使劲撸吧。")]),t._v(" "),v("p",[t._v("本文将简要的介绍扫码登录功能的技术实现逻辑，并实际结合淘宝、微信的扫码登录功能，学习和研究大厂主流应用的技术实现思路。")]),t._v(" "),v("h1",{attrs:{id:"_2、基本技术原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、基本技术原理"}},[t._v("#")]),t._v(" 2、基本技术原理")]),t._v(" "),v("h2",{attrs:{id:"_2-1-扫码登录功能到底是什么样的？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-扫码登录功能到底是什么样的？"}},[t._v("#")]),t._v(" 2.1 扫码登录功能到底是什么样的？")]),t._v(" "),v("p",[t._v("首先介绍下什么是扫码登录。现在大部分同学手机上都装有微信、qq和淘宝这一类的软件。而这些app都有他们相对应的网页端。为了让用户在使用他们的网页时登录更加方便和安全，使用手机扫一扫就可以登录的服务，就显的自然而然了。")]),t._v(" "),v("p",[v("strong",[t._v("几个主流大厂应用扫码登录时的界面效果如下：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108132909726-465921417.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("有很多小伙伴可能会感到很神奇，网页上只是显示了个二维码，它怎么就知道是哪个手机扫到了二维码，并且进行登录的呢？而且，登录完成以后，还能直接把用户信息显示给用户，真的是很神奇啊。")]),t._v(" "),v("h2",{attrs:{id:"_2-2-扫码登录功能的完整技术逻辑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-扫码登录功能的完整技术逻辑"}},[t._v("#")]),t._v(" 2.2 扫码登录功能的完整技术逻辑")]),t._v(" "),v("h4",{attrs:{id:"_1）网页端与服务器的配合逻辑："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1）网页端与服务器的配合逻辑："}},[t._v("#")]),t._v(" "),v("strong",[t._v("1）网页端与服务器的配合逻辑：")])]),t._v(" "),v("p",[t._v("接下来就是对于这个服务的详细实现。")]),t._v(" "),v("p",[t._v("首先用户打开网站的登录页面的时候，向浏览器的服务器发送获取登录二维码的请求。服务器收到请求后，随机生成一个uuid，将这个id作为key值存入redis服务器，同时设置一个过期时间，再过期后，用户登录二维码需要进行刷新重新获取。")]),t._v(" "),v("p",[t._v("同时，将这个key值和本公司的验证字符串合在一起，通过二维码生成接口，生成一个二维码的图片（二维码生成，网上有很多现成的接口和源码，这里不再介绍）。然后，将二维码图片和uuid一起返回给用户浏览器。")]),t._v(" "),v("p",[t._v("浏览器拿到二维码和uuid后，会每隔一秒向浏览器发送一次，登录是否成功的请求。请求中携带有uuid作为当前页面的标识符。这里有的同学就会奇怪了，服务器只存了个uuid在redis中作为key值，怎么会有用户的id信息呢？")]),t._v(" "),v("p",[t._v("这里确实会有用户的id信息，这个id信息是由手机服务器存入redis中的。具体请继续阅读“手机端与服务器的配合逻辑”。")]),t._v(" "),v("h4",{attrs:{id:"_2）手机端与服务器的配合逻辑："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2）手机端与服务器的配合逻辑："}},[t._v("#")]),t._v(" "),v("em",[t._v("2）手机端与服务器的配合逻辑：")])]),t._v(" "),v("p",[t._v("话说，浏览器拿到二维码后，将二维码展示到网页上，并给用户一个提示：请掏出您的手机，打开扫一扫进行登录。")]),t._v(" "),v("p",[t._v("用户拿出手机扫描二维码，就可以得到一个验证信息和一个uuid（扫描二维码获取字符串的功能在网上同样有很多demo，这里就不详细介绍了）。")]),t._v(" "),v("p",[t._v("由于手机端已经进行过了登录，在访问手机端的服务器的时候，参数中都回携带一个用户的token，手机端服务器可以从中解析到用户的userId（这里从token中取值而不是手机端直接传userid是为了安全，直接传userid可能会被截获和修改，token是加密的，被修改的风险会小很多）。手机端将解析到的数据和用户token一起作为参数，向服务器发送验证登录请求（这里的服务器是手机服务器，手机端的服务器跟网页端服务器不是同一台服务器）。")]),t._v(" "),v("p",[t._v("服务器收到请求后，首先对比参数中的验证信息，确定是否为用户登录请求接口。如果是，返回一个确认信息给手机端。")]),t._v(" "),v("p",[t._v("手机端收到返回后，将登录确认框显示给用户（防止用户误操作，同时使登录更加人性化）。用户确认是进行的登录操作后，手机再次发送请求。服务器拿到uuId和userId后，将用户的userid作为value值存入redis中以uuid作为key的键值对中。")]),t._v(" "),v("h4",{attrs:{id:"_3）登录成功时的逻辑："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3）登录成功时的逻辑："}},[t._v("#")]),t._v(" "),v("strong",[t._v("3）登录成功时的逻辑：")])]),t._v(" "),v("p",[t._v("然后，浏览器再次发送请求的时候，浏览器端的服务器就可以得到一个用户Id，并调用登录的方法，声成一个浏览器端的token，再浏览器再次发送请求的时候，将用户信息返回给浏览器，登录成功。这里存储用户id而不是直接存储用户信息是因为，手机端的用户信息，不一定是和浏览器端的用户信息完全一致。")]),t._v(" "),v("h4",{attrs:{id:"_4）详细的技术原理总结如下图所示："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4）详细的技术原理总结如下图所示："}},[t._v("#")]),t._v(" "),v("strong",[t._v("4）详细的技术原理总结如下图所示：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133020067-530842155.png",alt:"img"}})]),t._v(" "),v("h1",{attrs:{id:"_3、淘宝的扫码登录技术实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、淘宝的扫码登录技术实现"}},[t._v("#")]),t._v(" 3、淘宝的扫码登录技术实现")]),t._v(" "),v("p",[t._v("本节我们以淘宝的扫码登录为例，来实际研究分析一下淘宝的扫码登录实现逻辑。")]),t._v(" "),v("p",[v("strong",[t._v("登录界面 https://login.taobao.com/member/login.jhtml 传回来的参数为：")])]),t._v(" "),v("p",[v("strong",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133034248-917120898.png",alt:"img"}})])]),t._v(" "),v("p",[v("strong",[t._v("然后请求(GET)报文是这样的:")])]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("https://qrlogin.taobao.com/qrcodelogin/qrcodeLoginCheck.do?lgToken=2c3b4d53ef0513787bf4ce711ea5ba53&defaulturl=&_ksTS=1540106757739_2804&callback=jsonp2805\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("关键的就是lgToken，是网页的唯一ID，当打开了二维码登录的时候，网页在轮询(应该是长轮询long polling)调用接口去请求服务器。")]),t._v(" "),v("p",[v("strong",[t._v("如果没有扫码，返回的为：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133115512-1195606596.png",alt:"img"}})]),t._v(" "),v("p",[v("strong",[t._v("如果扫了的话则会返回：")])]),t._v(" "),v("blockquote",[v("p",[t._v("{")]),t._v(" "),v("p",[t._v('​    "code": "10001",')]),t._v(" "),v("p",[t._v('​    "message": "mobile scan QRCode success",')]),t._v(" "),v("p",[t._v('​    "success": true')]),t._v(" "),v("p",[t._v("}")])]),t._v(" "),v("p",[t._v("长时间没有扫码的话，网页端会停止轮询，二维码失效！")]),t._v(" "),v("p",[v("strong",[t._v("当手机端确认登录后，接口返回的是：")])]),t._v(" "),v("blockquote",[v("p",[t._v('{ "code": "10006", "success": true, "url": "https://login.taobao.com/member/loginByIm.do?uid=cntaobaoxxx&token=ff82fc0d1d395a33d3b38ec5a4981336&time=1530179143250&asker=qrcodelogin&ask_version=1.0.0&defaulturl=https://www.taobao.com&webpas=0b7aed2d43f01825183e4a49c6cae47d1479929926"}')])]),t._v(" "),v("p",[t._v('表示登录成功，当然手机端与服务端在点击"确认登录"之间的交互可能就是这样：网页端生成的lgToken去请求服务端，服务端记住了这个lgToken并认为登录了，当网页端再次轮询请求接口时，就返回真正的登录态Token，网页端此时就可以凭着这个Token来登录了。')]),t._v(" "),v("p",[v("strong",[t._v("详细的技术逻辑如下图所示：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133133018-1177752969.png",alt:"img"}})]),t._v(" "),v("h1",{attrs:{id:"_4、微信的扫码登录技术实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、微信的扫码登录技术实现"}},[t._v("#")]),t._v(" 4、微信的扫码登录技术实现")]),t._v(" "),v("h2",{attrs:{id:"_4-1-技术原理流程图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-技术原理流程图"}},[t._v("#")]),t._v(" 4.1 技术原理流程图")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133146058-1514561154.png",alt:"img"}})]),t._v(" "),v("p",[t._v("微信的网页版访问地址是："),v("a",{attrs:{href:"https://wx.qq.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wx.qq.com/"),v("OutboundLink")],1),t._v("，有兴趣也可以自行深入研究。")]),t._v(" "),v("h2",{attrs:{id:"_4-2-实际的技术实现逻辑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-实际的技术实现逻辑"}},[t._v("#")]),t._v(" 4.2 实际的技术实现逻辑")]),t._v(" "),v("h4",{attrs:{id:"_1）获取唯一的uuid-以及包含uid信息的二维码："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1）获取唯一的uuid-以及包含uid信息的二维码："}},[t._v("#")]),t._v(" "),v("strong",[t._v("1）获取唯一的uuid, 以及包含uid信息的二维码：")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133203183-678380281.jpg",alt:"img"}})]),t._v(" "),v("blockquote",[v("p",[t._v("// 获取uuid")]),t._v(" "),v("p",[t._v("getUUID: function() {")]),t._v(" "),v("p",[t._v("​    vare = t.defer();")]),t._v(" "),v("p",[t._v("​    returnwindow.QRLogin = {},")]),t._v(" "),v("p",[t._v("​    $.ajax({")]),t._v(" "),v("p",[t._v("​        url: i.API_jsLogin,")]),t._v(" "),v("p",[t._v('​        dataType: "script"')]),t._v(" "),v("p",[t._v("​    }).done(function() {")]),t._v(" "),v("p",[t._v("​        200 == window.QRLogin.code ? e.resolve(window.QRLogin.uuid) : e.reject(window.QRLogin.code)")]),t._v(" "),v("p",[t._v("​    }).fail(function() {")]),t._v(" "),v("p",[t._v("​        e.reject()")]),t._v(" "),v("p",[t._v("​    }),")]),t._v(" "),v("p",[t._v("​    e.promise")]),t._v(" "),v("p",[t._v("}")])]),t._v(" "),v("h4",{attrs:{id:"_2）浏览器轮询服务器，获取扫码状态："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2）浏览器轮询服务器，获取扫码状态："}},[t._v("#")]),t._v(" "),v("strong",[t._v("2）浏览器轮询服务器，获取扫码状态：")])]),t._v(" "),v("blockquote",[v("p",[t._v("// 查看扫码状态")]),t._v(" "),v("p",[t._v("checkLogin: function(e, a) {")]),t._v(" "),v("p",[t._v("​    varn = t.defer()")]),t._v(" "),v("p",[t._v("​        , a = a || 0;")]),t._v(" "),v("p",[t._v("​    returnwindow.code = 0,")]),t._v(" "),v("p",[t._v("​    window.checkLoginPromise = $.ajax({")]),t._v(" "),v("p",[t._v('​        url: i.API_login + "?loginicon=true&uuid="+ e + "&tip="+ a + "&r="+ ~newDate,')]),t._v(" "),v("p",[t._v('​        dataType: "script",')]),t._v(" "),v("p",[t._v("​        timeout: 35e3")]),t._v(" "),v("p",[t._v("​    }).done(function() {")]),t._v(" "),v("p",[t._v('​        newRegExp("/"+ location.host + "/");')]),t._v(" "),v("p",[t._v('​        if(window.redirect_uri && window.redirect_uri.indexOf("/"+ location.host + "/") < 0)')]),t._v(" "),v("p",[t._v("​            returnvoid (location.href = window.redirect_uri);")]),t._v(" "),v("p",[t._v("​        vare = {")]),t._v(" "),v("p",[t._v("​            code: window.code,")]),t._v(" "),v("p",[t._v("​            redirect_uri: window.redirect_uri,")]),t._v(" "),v("p",[t._v("​            userAvatar: window.userAvatar")]),t._v(" "),v("p",[t._v("​        };")]),t._v(" "),v("p",[t._v("​        n.resolve(e)")]),t._v(" "),v("p",[t._v("​    }).fail(function() {")]),t._v(" "),v("p",[t._v("​        n.reject()")]),t._v(" "),v("p",[t._v("​    }),")]),t._v(" "),v("p",[t._v("​    n.promise")]),t._v(" "),v("p",[t._v("}")])]),t._v(" "),v("h4",{attrs:{id:"_3）根据服务器返回的扫码状态，进行相应的操作："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3）根据服务器返回的扫码状态，进行相应的操作："}},[t._v("#")]),t._v(" "),v("strong",[t._v("3）根据服务器返回的扫码状态，进行相应的操作：")])]),t._v(" "),v("p",[t._v("*** 408 扫码超时：**如果手机没有扫码或没有授权登录，服务器会阻塞约25s，然后返回状态码 408 -> 前端继续轮询")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133232664-619837065.jpg",alt:"img"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133238085-2012989280.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("*** 400 二维码失效：**大约5分钟的时间内不扫码，二维码失效")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133253419-957680642.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v('*** 201 已扫码：**如果手机已经扫码，服务器立即返回状态码和用户的基本信息 （window.code=201,window.code.userAvator="..."），-> 前端继续轮询')]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133307430-591182141.jpg",alt:"img"}})]),t._v(" "),v("p",[t._v("*** 200 已授权：**如果手机点击了确认登录，服务器返回200及token -> 前端停止轮询, 获取到token，重定向到目标页")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img2018.cnblogs.com/blog/848699/202001/848699-20200108133317300-545669571.jpg",alt:"img"}})]),t._v(" "),v("p",[v("strong",[t._v("具体的代码示例如下：")])]),t._v(" "),v("blockquote",[v("p",[t._v("// 根据服务器返回的扫码状态，进行相应的操作")]),t._v(" "),v("p",[t._v("functiono(c) {")]),t._v(" "),v("p",[t._v("​    switch(c.code) {")]),t._v(" "),v("p",[t._v("​    case200:")]),t._v(" "),v("p",[t._v("​        t.newLoginPage(c.redirect_uri).then(function(t) {")]),t._v(" "),v("p",[t._v("​            varo = t.match(/"),v("ret",[t._v("(.*)</ret>/)")])],1),t._v(" "),v("p",[t._v("​                , r = t.match(/"),v("script")])])])}),[],!1,null,null,null);_.default=s.exports}}]);