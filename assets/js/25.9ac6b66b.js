(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{348:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"js-简单介绍一下dom-跟bom？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-简单介绍一下dom-跟bom？"}},[s._v("#")]),s._v(" [js] 简单介绍一下DOM 跟BOM？")]),s._v(" "),a("p",[a("strong",[s._v("DOM")]),s._v(" 代表"),a("strong",[s._v("文档对象模型")]),s._v("，是 HTML 和 XML 文档的接口(API)。当浏览器第一次读取(解析)HTML文档时，它会创建一个大对象，一个基于 HTM L文档的非常大的对象，这就是"),a("strong",[s._v("DOM")]),s._v("。它是一个从 HTML 文档中建模的树状结构。DOM 用于交互和修改DOM结构或特定元素或节点。")]),s._v(" "),a("p",[a("code",[s._v("javascript")]),s._v("中数据类型、对象属性?")]),s._v(" "),a("p",[s._v("最新的 ECMAScript 标准定义了 8 种数据类型:")]),s._v(" "),a("p",[s._v("7 种"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Primitive",target:"_blank",rel:"noopener noreferrer"}},[s._v("原始类型"),a("OutboundLink")],1),s._v(" （基本类型）")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Boolean",target:"_blank",rel:"noopener noreferrer"}},[s._v("Boolean"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Null",target:"_blank",rel:"noopener noreferrer"}},[s._v("Null"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Undefined",target:"_blank",rel:"noopener noreferrer"}},[s._v("Undefined"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Number",target:"_blank",rel:"noopener noreferrer"}},[s._v("Number"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/BigInt",target:"_blank",rel:"noopener noreferrer"}},[s._v("BigInt"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("BigInt")]),a("OutboundLink")],1),s._v("类型是 js 中的一个基础的数值类型，可以用任意精度表示整数，操作大整数。 BigInt是通过在整数末尾附加 "),a("code",[s._v("n")]),s._v("或调用构造函数来创建的。")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/String",target:"_blank",rel:"noopener noreferrer"}},[s._v("String"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Symbol",target:"_blank",rel:"noopener noreferrer"}},[s._v("Symbol"),a("OutboundLink")],1),s._v(" 符号类型是唯一的并且是不可修改的, 并且也可以用来作为Object的key的值")])]),s._v(" "),a("p",[s._v("和 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Object",target:"_blank",rel:"noopener noreferrer"}},[s._v("Object"),a("OutboundLink")],1),s._v(" 对象类型（引用类型）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("ECMAScript定义的对象中有两种属性：数据属性和访问器属性。")])]),s._v(" "),a("li",[a("p",[s._v("判断Array跟object：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.基于instanceof ")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.基于constructor ")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.基于Object.prototype.isPrototypeOf ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.基于getPrototypeOf ")]),s._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5.基于Object.prototype.toString ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[object Array]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6.ES6 isArray（）")]),s._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => true ")]),s._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//判断数组最佳写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" abac "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" abc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArrayFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"function"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[object Array]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArrayFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isArrayFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"js-什么是事件传播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-什么是事件传播"}},[s._v("#")]),s._v(" [js] 什么是事件传播?")]),s._v(" "),a("p",[s._v("当"),a("strong",[s._v("事件")]),s._v("发生在"),a("strong",[s._v("DOM")]),s._v("元素上时，该"),a("strong",[s._v("事件")]),s._v("并不完全发生在那个元素上。 在**“冒泡阶段”"),a("strong",[s._v("中，事件冒泡或向上传播至父级，祖父母，祖父母或父级，直到到达window为止；而在")]),s._v("“捕获阶段”**中，事件从"),a("code",[s._v("window")]),s._v("开始向下触发元素 事件或"),a("code",[s._v("event.target")]),s._v("。")]),s._v(" "),a("p",[s._v("事件传播有三个阶段：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("捕获阶段")]),s._v("–事件从 "),a("code",[s._v("window")]),s._v(" 开始，然后向下到每个元素，直到到达目标元素。")]),s._v(" "),a("li",[a("strong",[s._v("目标阶段")]),s._v("–事件已达到目标元素。")]),s._v(" "),a("li",[a("strong",[s._v("冒泡阶段")]),s._v("–事件从目标元素冒泡，然后上升到每个元素，直到到达 "),a("code",[s._v("window")]),s._v("。")])]),s._v(" "),a("p",[a("code",[s._v("event.preventDefault()")]),s._v(" 方法可防止元素的默认行为。 如果在表单元素中使用，它将阻止其提交。 如果在锚元素中使用，它将阻止其导航。 如果在上下文菜单中使用，它将阻止其显示或显示。")]),s._v(" "),a("p",[a("code",[s._v("event.stopPropagation()")]),s._v("方法用于阻止捕获和冒泡阶段中当前事件的进一步传播。")]),s._v(" "),a("h3",{attrs:{id:"js-和-有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-和-有什么区别？"}},[s._v("#")]),s._v(" [js] == 和 === 有什么区别？")]),s._v(" "),a("p",[a("code",[s._v("==")]),s._v("用于一般比较，"),a("code",[s._v("===")]),s._v("用于严格比较，"),a("code",[s._v("==")]),s._v("在比较的时候可以转换数据类型"),a("code",[s._v("，===")]),s._v("严格比较，只要类型不匹配就返回"),a("code",[s._v("flase")]),s._v("。")]),s._v(" "),a("p",[s._v("先来看看 "),a("code",[s._v("==")]),s._v(" 这兄弟：")]),s._v(" "),a("p",[s._v("强制是将值转换为另一种类型的过程。 在这种情况下，"),a("code",[s._v("==")]),s._v("会执行隐式强制。 在比较两个值之前，"),a("code",[s._v("==")]),s._v("需要执行一些规则。")]),s._v(" "),a("p",[s._v("假设我们要比较"),a("code",[s._v("x == y")]),s._v("的值。")]),s._v(" "),a("ol",[a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("和"),a("code",[s._v("y")]),s._v("的类型相同，则 JS 会换成"),a("code",[s._v("===")]),s._v("操作符进行比较。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("为"),a("code",[s._v("null")]),s._v(", "),a("code",[s._v("y")]),s._v("为"),a("code",[s._v("undefined")]),s._v("，则返回"),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("为"),a("code",[s._v("undefined")]),s._v("且"),a("code",[s._v("y")]),s._v("为"),a("code",[s._v("null")]),s._v("，则返回"),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("的类型是"),a("code",[s._v("number")]),s._v(", "),a("code",[s._v("y")]),s._v("的类型是"),a("code",[s._v("string")]),s._v("，那么返回"),a("code",[s._v("x == toNumber(y)")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("的类型是"),a("code",[s._v("string")]),s._v(", "),a("code",[s._v("y")]),s._v("的类型是"),a("code",[s._v("number")]),s._v("，那么返回"),a("code",[s._v("toNumber(x) == y")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("为类型是"),a("code",[s._v("boolean")]),s._v("，则返回"),a("code",[s._v("toNumber(x)== y")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("y")]),s._v("为类型是"),a("code",[s._v("boolean")]),s._v("，则返回"),a("code",[s._v("x == toNumber(y)")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("是"),a("code",[s._v("string")]),s._v("、"),a("code",[s._v("symbol")]),s._v("或"),a("code",[s._v("number")]),s._v("，而"),a("code",[s._v("y")]),s._v("是"),a("code",[s._v("object")]),s._v("类型，则返回"),a("code",[s._v("x == toPrimitive(y)")]),s._v("。")]),s._v(" "),a("li",[s._v("如果"),a("code",[s._v("x")]),s._v("是"),a("code",[s._v("object")]),s._v("，"),a("code",[s._v("y")]),s._v("是"),a("code",[s._v("string")]),s._v("，"),a("code",[s._v("symbol")]),s._v("则返回"),a("code",[s._v("toPrimitive(x) == y")]),s._v("。")]),s._v(" "),a("li",[s._v("剩下的 返回 "),a("code",[s._v("false")])])]),s._v(" "),a("p",[s._v("注意："),a("code",[s._v("toPrimitive")]),s._v("首先在对象中使用"),a("code",[s._v("valueOf")]),s._v("方法，然后使用"),a("code",[s._v("toString")]),s._v("方法来获取该对象的原始值。")]),s._v(" "),a("p",[s._v("举个例子。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("x")]),s._v(" "),a("th",[s._v("y")]),s._v(" "),a("th",[s._v("x == y")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("5")]),s._v(" "),a("td",[s._v("5")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("'1'")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("null")]),s._v(" "),a("td",[s._v("undefined")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("'1,2'")]),s._v(" "),a("td",[s._v("[1,2]")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("'[object Object]'")]),s._v(" "),a("td",[s._v("{}")]),s._v(" "),a("td",[s._v("true")])])])]),s._v(" "),a("p",[s._v("这些例子都返回"),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("p",[s._v("第一个示例符合"),a("code",[s._v("条件1")]),s._v("，因为"),a("code",[s._v("x")]),s._v("和"),a("code",[s._v("y")]),s._v("具有相同的类型和值。")]),s._v(" "),a("p",[s._v("第二个示例符合"),a("code",[s._v("条件4")]),s._v("，在比较之前将"),a("code",[s._v("y")]),s._v("转换为数字。")]),s._v(" "),a("p",[s._v("第三个例子符合"),a("code",[s._v("条件2")]),s._v("。")]),s._v(" "),a("p",[s._v("第四个例子符合"),a("code",[s._v("条件7")]),s._v("，因为"),a("code",[s._v("y")]),s._v("是"),a("code",[s._v("boolean")]),s._v("类型。")]),s._v(" "),a("p",[s._v("第五个示例符合"),a("code",[s._v("条件8")]),s._v("。 使用"),a("code",[s._v("toString()")]),s._v("方法将数组转换为字符串，该方法返回"),a("code",[s._v("1,2")]),s._v("。")]),s._v(" "),a("p",[s._v("最后一个示例符合"),a("code",[s._v("条件8")]),s._v("。 使用"),a("code",[s._v("toString()")]),s._v("方法将对象转换为字符串，该方法返回"),a("code",[s._v("[object Object]")]),s._v("。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("x")]),s._v(" "),a("th",[s._v("y")]),s._v(" "),a("th",[s._v("x === y")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("5")]),s._v(" "),a("td",[s._v("5")]),s._v(" "),a("td",[s._v("true")])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("'1'")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("null")]),s._v(" "),a("td",[s._v("undefined")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("false")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("'1,2'")]),s._v(" "),a("td",[s._v("[1,2]")]),s._v(" "),a("td",[s._v("false")])]),s._v(" "),a("tr",[a("td",[s._v("'[object Object]'")]),s._v(" "),a("td",[s._v("{}")]),s._v(" "),a("td",[s._v("false")])])])]),s._v(" "),a("p",[s._v("如果使用"),a("code",[s._v("===")]),s._v("运算符，则第一个示例以外的所有比较将返回"),a("code",[s._v("false")]),s._v("，因为它们的类型不同，而第一个示例将返回"),a("code",[s._v("true")]),s._v("，因为两者的类型和值相同。")]),s._v(" "),a("h3",{attrs:{id:"js-严格模式-use-strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-严格模式-use-strict"}},[s._v("#")]),s._v(" [js] 严格模式  'use strict'")]),s._v(" "),a("p",[a("code",[s._v('"use strict"')]),s._v(" 是 "),a("strong",[s._v("ES5")]),s._v(" 特性，它使我们的代码在函数或整个脚本中处于"),a("strong",[s._v("严格模式")]),s._v("。"),a("strong",[s._v("严格模式")]),s._v("帮助我们在代码的早期避免 bug，并为其添加限制。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("严格模式")]),s._v("的一些限制：")])]),s._v(" "),a("ol",[a("li",[s._v("变量必须声明后再使用")]),s._v(" "),a("li",[s._v("函数的参数不能有同名属性，否则报错")]),s._v(" "),a("li",[s._v("不能使用"),a("code",[s._v("with")]),s._v("语句")]),s._v(" "),a("li",[s._v("不能对只读属性赋值，否则报错")]),s._v(" "),a("li",[s._v("不能使用前缀 0 表示八进制数，否则报错")]),s._v(" "),a("li",[s._v("不能删除不可删除的属性，否则报错")]),s._v(" "),a("li",[s._v("不能删除变量"),a("code",[s._v("delete prop")]),s._v("，会报错，只能删除属性"),a("code",[s._v("delete global[prop]")])]),s._v(" "),a("li",[a("code",[s._v("eval")]),s._v("不能在它的外层作用域引入变量")]),s._v(" "),a("li",[a("code",[s._v("eval")]),s._v("和"),a("code",[s._v("arguments")]),s._v("不能被重新赋值")]),s._v(" "),a("li",[a("code",[s._v("arguments")]),s._v("不会自动反映函数参数的变化")]),s._v(" "),a("li",[s._v("不能使用"),a("code",[s._v("arguments.callee")])]),s._v(" "),a("li",[s._v("不能使用"),a("code",[s._v("arguments.caller")])]),s._v(" "),a("li",[s._v("禁止"),a("code",[s._v("this")]),s._v("指向全局对象")]),s._v(" "),a("li",[s._v("不能使用"),a("code",[s._v("fn.caller")]),s._v("和"),a("code",[s._v("fn.arguments")]),s._v("获取函数调用的堆栈")]),s._v(" "),a("li",[s._v("增加了保留字（比如"),a("code",[s._v("protected")]),s._v("、"),a("code",[s._v("static")]),s._v("和"),a("code",[s._v("interface")]),s._v("）")])]),s._v(" "),a("ul",[a("li",[s._v("设立”严格模式”的目的，主要有以下几个：")])]),s._v(" "),a("ol",[a("li",[s._v("消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;")]),s._v(" "),a("li",[s._v("消除代码运行的一些不安全之处，保证代码运行的安全；")]),s._v(" "),a("li",[s._v("提高编译器效率，增加运行速度；")]),s._v(" "),a("li",[s._v("为未来新版本的Javascript做好铺垫。")])]),s._v(" "),a("h3",{attrs:{id:"js-function-prototype-apply-方法的用途是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-function-prototype-apply-方法的用途是什么？"}},[s._v("#")]),s._v(" [js] Function.prototype.apply 方法的用途是什么？")]),s._v(" "),a("p",[a("code",[s._v("apply()")]),s._v(" 方法调用一个具有给定this值的函数，以及作为一个数组（或类似数组对象）提供的参数。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const details = {\n  message: 'Hello World!'\n};\n\nfunction getMessage(){\n  return this.message;\n}\n\ngetMessage.apply(details); // 'Hello World!'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("blockquote",[a("p",[a("code",[s._v("call()")]),s._v("方法的作用和 "),a("code",[s._v("apply()")]),s._v(" 方法类似，区别就是"),a("code",[s._v("call()")]),s._v("方法接受的是参数列表，而"),a("code",[s._v("apply()")]),s._v("方法接受的是一个参数数组。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const person = {\n  name: "Marko Polo"\n};\n\nfunction greeting(greetingMessage) {\n  return `${greetingMessage} ${this.name}`;\n}\n\ngreeting.apply(person, [\'Hello\']); // "Hello Marko Polo!"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"js-function-prototype-call-方法的用途是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-function-prototype-call-方法的用途是什么？"}},[s._v("#")]),s._v(" [js] "),a("code",[s._v("Function.prototype.call")]),s._v(" 方法的用途是什么？")]),s._v(" "),a("p",[a("code",[s._v("call()")]),s._v(" 方法使用一个指定的 "),a("code",[s._v("this")]),s._v(" 值和单独给出的一个或多个参数来调用一个函数。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const details = {\n  message: 'Hello World!'\n};\n\nfunction getMessage(){\n  return this.message;\n}\n\ngetMessage.call(details); // 'Hello World!'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("注意：该方法的语法和作用与 "),a("code",[s._v("apply()")]),s._v(" 方法类似，只有一个区别，就是 "),a("code",[s._v("call()")]),s._v(" 方法接受的是一个参数列表，而 "),a("code",[s._v("apply()")]),s._v(" 方法接受的是一个包含多个参数的数组。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const person = {\n  name: "Marko Polo"\n};\n\nfunction greeting(greetingMessage) {\n  return `${greetingMessage} ${this.name}`;\n}\n\ngreeting.call(person, \'Hello\'); // "Hello Marko Polo!"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"js-function-prototype-bind-的用途是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-function-prototype-bind-的用途是什么？"}},[s._v("#")]),s._v(" [js] Function.prototype.bind 的用途是什么？")]),s._v(" "),a("p",[a("code",[s._v("bind()")]),s._v(" 方法创建一个新的函数，在 "),a("code",[s._v("bind()")]),s._v(" 被调用时，这个新函数的 "),a("code",[s._v("this")]),s._v(" 被指定为 "),a("code",[s._v("bind()")]),s._v(" 的第一个参数，而其余参数将作为新函数的参数，供调用时使用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React from 'react';\n\nclass MyComponent extends React.Component {\n     constructor(props){\n          super(props); \n          this.state = {\n             value : \"\"\n          }  \n          this.handleChange = this.handleChange.bind(this); \n          // 将 “handleChange” 方法绑定到 “MyComponent” 组件\n     }\n\n     handleChange(e){\n       //do something amazing here\n     }\n\n     render(){\n        return (\n              <>\n                <input type={this.props.type}\n                        value={this.state.value}\n                     onChange={this.handleChange}                      \n                  />\n              </>\n        )\n     }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"js-arguments-的对象是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-arguments-的对象是什么？"}},[s._v("#")]),s._v(" [js] arguments 的对象是什么？")]),s._v(" "),a("p",[a("code",[s._v("arguments")]),s._v("对象是函数中传递的参数值的集合。它是一个类似数组的对象，因为它有一个length属性，我们可以使用数组索引表示法"),a("code",[s._v("arguments[1]")]),s._v("来访问单个值，但它没有数组中的内置方法，如："),a("code",[s._v("forEach")]),s._v("、"),a("code",[s._v("reduce")]),s._v("、"),a("code",[s._v("filter")]),s._v("和"),a("code",[s._v("map")]),s._v("。")]),s._v(" "),a("p",[s._v("我们可以使用"),a("code",[s._v("Array.prototype.slice")]),s._v("将"),a("code",[s._v("arguments")]),s._v("对象转换成一个数组。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function one() {\n  return Array.prototype.slice.call(arguments);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("注意:箭头函数中没有arguments对象。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function one() {\n  return arguments;\n}\nconst two = function () {\n  return arguments;\n}\nconst three = function three() {\n  return arguments;\n}\n\nconst four = () => arguments;\n\nfour(); // Throws an error  - arguments is not defined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("当我们调用函数"),a("code",[s._v("four")]),s._v("时，它会抛出一个"),a("code",[s._v("ReferenceError: arguments is not defined error")]),s._v("。使用"),a("code",[s._v("rest")]),s._v("语法，可以解决这个问题。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const four = (...args) => args;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这会自动将所有参数值放入数组中。")]),s._v(" "),a("h3",{attrs:{id:"js-es6或ecmascript-2015有哪些新特性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-es6或ecmascript-2015有哪些新特性？"}},[s._v("#")]),s._v(" [js] ES6或ECMAScript 2015有哪些新特性？")]),s._v(" "),a("ul",[a("li",[s._v("箭头函数")]),s._v(" "),a("li",[s._v("类")]),s._v(" "),a("li",[s._v("模板字符串")]),s._v(" "),a("li",[s._v("加强的对象字面量")]),s._v(" "),a("li",[s._v("对象解构")]),s._v(" "),a("li",[s._v("Promise")]),s._v(" "),a("li",[s._v("生成器")]),s._v(" "),a("li",[s._v("模块")]),s._v(" "),a("li",[s._v("Symbol")]),s._v(" "),a("li",[s._v("代理")]),s._v(" "),a("li",[s._v("Set")]),s._v(" "),a("li",[s._v("函数默认参数")]),s._v(" "),a("li",[s._v("rest 和展开")]),s._v(" "),a("li",[s._v("块作用域")])]),s._v(" "),a("h3",{attrs:{id:"js-什么是对象解构？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-什么是对象解构？"}},[s._v("#")]),s._v(" [js] 什么是对象解构？")]),s._v(" "),a("p",[a("strong",[s._v("对象析构")]),s._v("是从对象或数组中获取或提取值的一种新的、更简洁的方法。假设有如下的对象：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const employee = {\n  firstName: "Marko",\n  lastName: "Polo",\n  position: "Software Developer",\n  yearHired: 2017\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("从对象获取属性，早期方法是创建一个与对象属性同名的变量。这种方法很麻烦，因为我们要为每个属性创建一个新变量。假设我们有一个大对象，它有很多属性和方法，用这种方法提取属性会很麻烦。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var firstName = employee.firstName;\nvar lastName = employee.lastName;\nvar position = employee.position;\nvar yearHired = employee.yearHired;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("使用解构方式语法就变得简洁多了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("{ firstName, lastName, position, yearHired } = employee;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("我们还可以为属性取别名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let { firstName: fName, lastName: lName, position, yearHired } = employee;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当然如果属性值为 "),a("code",[s._v("undefined")]),s._v(" 时，我们还可以指定默认值：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('let { firstName = "Mark", lastName: lName, position, yearHired } = employee;\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"js-promise-是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-promise-是什么？"}},[s._v("#")]),s._v(" [js] Promise 是什么？")]),s._v(" "),a("p",[a("strong",[s._v("Promise")]),s._v(" 是异步编程的一种解决方案：从语法上讲，"),a("code",[s._v("promise")]),s._v("是一个对象，从它可以获取异步操作的消息；从本意上讲，它是承诺，承诺它过一段时间会给你一个结果。"),a("code",[s._v("promise")]),s._v("有三种状态："),a("code",[s._v("pending(等待态)")]),s._v("，"),a("code",[s._v("fulfiled(成功态)")]),s._v("，"),a("code",[s._v("rejected(失败态)")]),s._v("；状态一旦改变，就不会再变。创造"),a("code",[s._v("promise")]),s._v("实例后，它会立即执行。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("fs.readFile('somefile.txt', function (e, data) {\n  if (e) {\n    console.log(e);\n  }\n  console.log(data);\n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果我们在回调内部有另一个异步操作，则此方法存在问题。 我们将有一个混乱且不可读的代码。 此代码称为**“回调地狱”**。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回调地狱")]),s._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'somefile.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//your code here")]),s._v("\n  fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readdir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'directory'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" files")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//your code here")]),s._v("\n    fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'directory'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//your code here")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("如果我们在这段代码中使用"),a("code",[s._v("promise")]),s._v("，它将更易于阅读、理解和维护。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("promReadFile('file/path')\n  .then(data => {\n    return promReaddir('directory');\n  })\n  .then(data => {\n    return promMkdir('directory');\n  })\n  .catch(e => {\n    console.log(e);\n  })\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("code",[s._v("promise")]),s._v("有三种不同的状态：")]),s._v(" "),a("ul",[a("li",[s._v("pending：初始状态，完成或失败状态的前一个状态")]),s._v(" "),a("li",[s._v("fulfilled：操作成功完成")]),s._v(" "),a("li",[s._v("rejected：操作失败")])]),s._v(" "),a("p",[a("code",[s._v("pending")]),s._v(" 状态的 "),a("code",[s._v("Promise")]),s._v(" 对象会触发 "),a("code",[s._v("fulfilled/rejected")]),s._v(" 状态，在其状态处理方法中可以传入参数/失败信息。当操作成功完成时，"),a("strong",[s._v("Promise")]),s._v(" 对象的 "),a("code",[s._v("then")]),s._v(" 方法就会被调用；否则就会触发 "),a("code",[s._v("catch")]),s._v("。如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const myFirstPromise = new Promise((resolve, reject) => {\n    setTimeout(function(){\n        resolve("成功!"); \n    }, 250);\n});\n\nmyFirstPromise.then((data) => {\n    console.log("Yay! " + data);\n}).catch((e) => {...});\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"js-async-await-是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-async-await-是什么？"}},[s._v("#")]),s._v(" [js] async await 是什么？")]),s._v(" "),a("p",[a("code",[s._v("async/await")]),s._v("是 JS 中编写异步或非阻塞代码的新方法。它建立在"),a("strong",[s._v("Promises")]),s._v("之上，让异步代码的可读性和简洁度都更高。")]),s._v(" "),a("p",[a("code",[s._v("async/await")]),s._v("是 JS 中编写异步或非阻塞代码的新方法。 它建立在"),a("code",[s._v("Promises")]),s._v("之上，相对于 Promise 和回调，它的可读性和简洁度都更高。 但是，在使用此功能之前，我们必须先学习"),a("code",[s._v("Promises")]),s._v("的基础知识，因为正如我之前所说，它是基于"),a("code",[s._v("Promise")]),s._v("构建的，这意味着幕后使用仍然是"),a("strong",[s._v("Promise")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("使用 Promise")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("callApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"url/to/api/endpoint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//do something with "data"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//do something with "err"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("strong",[s._v("使用async/await")])]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("async/await")]),s._v("，我们使用 tru/catch 语法来捕获异常。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('async function callApi() {\n  try {\n    const resp = await fetch("url/to/api/endpoint");\n    const data = await resp.json();\n    //do something with "data"\n  } catch (e) {\n    //do something with "err"\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("strong",[s._v("注意")]),s._v(":使用 "),a("code",[s._v("async")]),s._v("关键声明函数会隐式返回一个"),a("strong",[s._v("Promise")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const giveMeOne = async () => 1;\n\ngiveMeOne()\n  .then((num) => {\n    console.log(num); // logs 1\n  });\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("注意:")]),a("code",[s._v("await")]),s._v("关键字只能在"),a("code",[s._v("async function")]),s._v("中使用。在任何非"),a("strong",[s._v("async function")]),s._v("的函数中使用"),a("code",[s._v("await")]),s._v("关键字都会抛出错误。"),a("code",[s._v("await")]),s._v("关键字在执行下一行代码之前等待右侧表达式(可能是一个"),a("strong",[s._v("Promise")]),s._v(")返回。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("giveMeOne")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("giveMeOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Uncaught SyntaxError: await is only valid in async function")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTwo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("giveMeOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这行会等待右侧表达式执行完成")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("giveMeOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTwo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"js-如何检查对象中是否存在某个属性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-如何检查对象中是否存在某个属性？"}},[s._v("#")]),s._v(" [js] 如何检查对象中是否存在某个属性？")]),s._v(" "),a("p",[s._v("检查对象中是否存在属性有三种方法。")]),s._v(" "),a("p",[s._v("第一种使用 "),a("code",[s._v("in")]),s._v(" 操作符号：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bwahahah"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hweasa"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("第二种使用 "),a("code",[s._v("hasOwnProperty")]),s._v(" 方法，"),a("code",[s._v("hasOwnProperty()")]),s._v(" 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('console.log(o.hasOwnProperty("prop2")); // true\nconsole.log(o.hasOwnProperty("prop1")); // false\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("第三种使用括号符号"),a("code",[s._v('obj["prop"]')]),s._v("。如果属性存在，它将返回该属性的值，否则将返回"),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "bwahahah"')]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prop1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"js-in-运算符和-object-hasownproperty-方法有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-in-运算符和-object-hasownproperty-方法有什么区别？"}},[s._v("#")]),s._v(" [js]"),a("code",[s._v("in")]),s._v(" 运算符和 "),a("code",[s._v("Object.hasOwnProperty")]),s._v(" 方法有什么区别？")]),s._v(" "),a("p",[a("strong",[s._v("hasOwnPropert方法")])]),s._v(" "),a("p",[a("code",[s._v("hasOwnPropert()")]),s._v("方法返回值是一个布尔值，指示对象自身属性中是否具有指定的属性，因此这个方法会忽略掉那些从原型链上继承到的属性。")]),s._v(" "),a("p",[s._v("看下面的例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Object.prototype.phone= '15345025546';\n\nlet obj = {\n\tname: '前端小智',\n\tage: '28'\n}\nconsole.log(obj.hasOwnProperty('phone')) // false\nconsole.log(obj.hasOwnProperty('name')) // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("可以看到，如果在函数原型上定义一个变量"),a("code",[s._v("phone")]),s._v("，"),a("code",[s._v("hasOwnProperty")]),s._v("方法会直接忽略掉。")]),s._v(" "),a("p",[a("strong",[s._v("in 运算符")])]),s._v(" "),a("p",[s._v("如果指定的属性在指定的对象或其原型链中，则"),a("code",[s._v("in")]),s._v(" 运算符返回"),a("code",[s._v("true")]),s._v("。")]),s._v(" "),a("p",[s._v("还是用上面的例子来演示：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("console.log('phone' in obj) // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以看到"),a("code",[s._v("in")]),s._v("运算符会检查它或者其原型链是否包含具有指定名称的属性。")]),s._v(" "),a("h3",{attrs:{id:"js-js中的强制转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-js中的强制转换规则"}},[s._v("#")]),s._v(" [js] js中的强制转换规则")]),s._v(" "),a("p",[a("strong",[s._v("toString")])]),s._v(" "),a("p",[a("strong",[s._v("Object.prototype.toString()")])]),s._v(" "),a("p",[a("code",[s._v("toString()")]),s._v("方法返回一个表示该对象的字符串。")]),s._v(" "),a("p",[s._v("每个对象都有一个 "),a("code",[s._v("toString()")]),s._v(" 方法，当对象被表示为文本值时或者当以期望字符串的方式引用对象时，该方法被自动调用。")]),s._v(" "),a("p",[s._v("这里先记住，"),a("code",[s._v("valueOf()")]),s._v(" 和 "),a("code",[s._v("toString()")]),s._v("在特定的场合下会自行调用。")]),s._v(" "),a("p",[a("strong",[s._v("valueOf")])]),s._v(" "),a("p",[a("code",[s._v("Object.prototype.valueOf()")]),s._v("方法返回指定对象的原始值。")]),s._v(" "),a("p",[a("code",[s._v("JavaScript")]),s._v(" 调用 "),a("code",[s._v("valueOf()")]),s._v(" 方法用来把对象转换成原始类型的值（数值、字符串和布尔值）")])])}),[],!1,null,null,null);t.default=e.exports}}]);