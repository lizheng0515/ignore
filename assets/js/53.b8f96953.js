(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{383:function(e,r,n){"use strict";n.r(r);var a=n(2),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[n("strong",[e._v("为了保证的可读性，本文采用意译而非直译。")])]),e._v(" "),n("h2",{attrs:{id:"proxy-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-介绍"}},[e._v("#")]),e._v(" Proxy 介绍")]),e._v(" "),n("p",[e._v("使用"),n("code",[e._v("Proxy")]),e._v("，你可以将一只猫伪装成一只老虎。下面大约有6个例子，我希望它们能让你相信，Proxy 提供了强大的 Javascript 元编程。")]),e._v(" "),n("p",[e._v("尽管它不像其他ES6功能用的普遍，但"),n("code",[e._v("Proxy")]),e._v("有许多用途，包括"),n("a",{attrs:{href:"https://hackernoon.com/introducing-javascript-es6-proxies-1327419ab413",target:"_blank",rel:"noopener noreferrer"}},[e._v("运算符重载"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Mock_object",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象模拟"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://medium.com/dailyjs/how-to-use-javascript-proxies-for-fun-and-profit-365579d4a9f8",target:"_blank",rel:"noopener noreferrer"}},[e._v("简洁而灵活的API创建"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://github.com/sindresorhus/on-change",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象变化事件"),n("OutboundLink")],1),e._v("，甚至"),n("a",{attrs:{href:"https://medium.com/@gustojs/vuejs-3-and-other-top-news-from-q-a-event-with-core-vue-devs-c9834946ae7b",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 3背后的内部响应系统提供动力"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("Proxy")]),e._v("用于修改某些操作的默认行为，也可以理解为在目标对象之前架设一层拦截，外部所有的访问都必须先通过这层拦截，因此提供了一种机制，可以对外部的访问进行过滤和修改。这个词的原理为代理，在这里可以表示由它来“代理”某些操作，译为“代理器”。")]),e._v(" "),n("p",[e._v("ES6原生提供了"),n("code",[e._v("Proxy")]),e._v("构造函数，用来生成"),n("code",[e._v("Proxy")]),e._v("实例。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var proxy = new Proxy(target, handler);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("code",[e._v("Proxy")]),e._v("对象的所有用法，都是上面的这种形式。不同的只是"),n("code",[e._v("handle")]),e._v("参数的写法。其中"),n("code",[e._v("new Proxy")]),e._v("用来生成"),n("code",[e._v("Proxy")]),e._v("实例，"),n("code",[e._v("target")]),e._v("是表示所要拦截的对象，"),n("code",[e._v("handle")]),e._v("是用来定制拦截行为的对象。")]),e._v(" "),n("p",[e._v("下面是 Proxy 最简单的例子是，这是一个有陷阱的代理，一个"),n("code",[e._v("get")]),e._v("陷阱，总是返回"),n("code",[e._v("42")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let target = {\n  x: 10,\n  y: 20\n}\n\nlet hanler = {\n  get: (obj, prop) => 42\n}\n\ntarget = new Proxy(target, hanler)\n\ntarget.x //42\ntarget.y //42\ntarget.x // 42\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("结果是一个对象将为任何属性访问操作都返回“42”。 这包括"),n("code",[e._v("target.x")]),e._v("，"),n("code",[e._v("target['x']")]),e._v("，"),n("code",[e._v("Reflect.get(target, 'x')")]),e._v("等。")]),e._v(" "),n("p",[e._v("但是，Proxy 陷阱当然不限于属性的读取。 它只是十几个不同陷阱中的一个：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.get"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/set",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.set"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/has",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.has"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/apply",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.apply"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/construct",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.construct"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/ownKeys",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.ownKeys"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/deleteProperty",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.deleteProperty"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.defineProperty"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.isExtensible"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/preventExtensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.preventExtensions"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.getPrototypeOf"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/setPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.setPrototypeOf"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.getOwnPropertyDescriptor"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"proxy-用例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-用例"}},[e._v("#")]),e._v(" Proxy 用例")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://segmentfault.com/img/bVbuRz3?w=697&h=344",alt:"clipboard.png"}})]),e._v(" "),n("h4",{attrs:{id:"默认值-“零值”"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认值-“零值”"}},[e._v("#")]),e._v(" "),n("strong",[e._v("默认值/“零值”")])]),e._v(" "),n("p",[e._v("在 Go 语言中，有"),n("a",{attrs:{href:"https://tour.golang.org/basics/12",target:"_blank",rel:"noopener noreferrer"}},[e._v("零值"),n("OutboundLink")],1),e._v("的概念，零值是特定于类型的隐式默认结构值。其思想是提供类型安全的默认基元值，或者用gopher的话说，给结构一个有用的零值。")]),e._v(" "),n("p",[e._v("虽然不同的创建模式支持类似的功能，但Javascript无法用隐式初始值包装对象。Javascript中未设置属性的默认值是"),n("code",[e._v("undefined")]),e._v("。但 Proxy 可以改变这种情况。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const withZeroValue = (target, zeroValue) => new Proxy(target, {\n  get: (obj, prop) => (prop in obj) ? obj[prop] : zeroValue\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("函数"),n("code",[e._v("withZeroValue")]),e._v(" 用来包装目标对象。 如果设置了属性，则返回属性值。 否则，它返回一个默认的**“零值”**。")]),e._v(" "),n("p",[e._v("从技术上讲，这种方法也不是隐含的，但如果我们扩展"),n("code",[e._v("withZeroValue")]),e._v("，以Boolean ("),n("code",[e._v("false")]),e._v("), Number ("),n("code",[e._v("0")]),e._v("), String ("),n("code",[e._v('""')]),e._v("), Object ("),n("code",[e._v("{}")]),e._v(")，Array ("),n("code",[e._v("[]")]),e._v(")等对应的零值，则可能是隐含的。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let pos = {\n  x: 4,\n  y: 19\n}\n\nconsole.log(pos.x, pos.y, pos.z) // 4, 19, undefined\n\npos = withZeroValue(pos, 0)\n\nconsole.log(pos.z, pos.y, pos.z) // 4, 19, 0\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("此功能可能有用的一个地方是坐标系。 绘图库可以基于数据的形状自动支持2D和3D渲染。 不是创建两个单独的模型，而是始终将"),n("code",[e._v("z")]),e._v("默认为 "),n("code",[e._v("0")]),e._v(" 而不是"),n("code",[e._v("undefined")]),e._v("，这可能是有意义的。")]),e._v(" "),n("h2",{attrs:{id:"负索引数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#负索引数组"}},[e._v("#")]),e._v(" 负索引数组")]),e._v(" "),n("p",[e._v("在JS中获取数组中的最后一个元素方式通过写的很冗长且重复，也容易出错。 这就是为什么有一个TC39提案定义了一个便利属性"),n("code",[e._v("Array.lastItem")]),e._v("来获取和设置最后一个元素。")]),e._v(" "),n("p",[e._v("其他语言，如Python和Ruby，使用负组索引更容易访问最后面的元素。例如，可以简单地使用"),n("code",[e._v("arr[-1]")]),e._v("替代"),n("code",[e._v("arr[arr.length-1]")]),e._v("访问最后一个元素。")]),e._v(" "),n("p",[e._v("使用 Proxy 也可以在 Javascript 中使用负索引。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const negativeArray = (els) => new Proxy(els, {\n  get: (target, propKey, receiver) => Reflect.get(target,\n    (+propKey < 0) ? String(target.length + +propKey) : propKey, receiver)\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("一个重要的注意事项是包含"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.get"),n("OutboundLink")],1),e._v("的陷阱字符串化所有属性。 对于数组访问，我们需要将属性名称强制转换为"),n("code",[e._v("Numbers")]),e._v("，这样就可以使用一元加运算符简洁地完成。")]),e._v(" "),n("p",[e._v("现在"),n("code",[e._v("[-1]")]),e._v("访问最后一个元素，"),n("code",[e._v("[-2]")]),e._v("访问倒数第二个元素，以此类推。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const unicorn = negativeArray(['🐴', '🎂', '🌈']);\n\nunicorn[-1] // '🌈'\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h2",{attrs:{id:"隐藏属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐藏属性"}},[e._v("#")]),e._v(" 隐藏属性")]),e._v(" "),n("p",[e._v("众所周知 JS 没有私有属性。 "),n("code",[e._v("Symbol")]),e._v("最初是为了"),n("a",{attrs:{href:"https://codeburst.io/a-practical-guide-to-es6-symbol-3fc90117c7ac",target:"_blank",rel:"noopener noreferrer"}},[e._v("启用私有属性而引入的"),n("OutboundLink")],1),e._v("，但后来使用像"),n("code",[e._v("Object.getOwnPropertySymbols")]),e._v("这样的反射方法进行了淡化，这使得它们可以被公开发现。")]),e._v(" "),n("p",[e._v("长期以来的惯例是将私有属性命名为前下划线"),n("code",[e._v("_")]),e._v("，有效地标记它们“不要访问”。"),n("code",[e._v("Prox")]),e._v(" 提供了一种稍微更好的方法来屏蔽这些属性。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const hide = (target, prefix = '_') => new Proxy(target, {\n  has: (obj, prop) => (!prop.startsWith(prefix) && prop in obj),\n  ownKeys: (obj) => Reflect.ownKeys(obj)\n    .filter(prop => (typeof prop !== \"string\" || !prop.startsWith(prefix))),\n  get: (obj, prop, rec) => (prop in rec) ? obj[prop] : undefined\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[n("code",[e._v("hide")]),e._v("函数包装目标对象，并使得从"),n("code",[e._v("in")]),e._v("运算符和"),n("code",[e._v("Object.getOwnPropertyNames")]),e._v("等方法无法访问带有下划线的属性。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let userData = hide({\n  firstName: 'Tom',\n  mediumHandle: '@tbarrasso',\n  _favoriteRapper: 'Drake'\n})\n\nuserData._favoriteRapper        // undefined\n('_favoriteRapper' in userData) // false\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("更完整的实现还包括诸如"),n("code",[e._v("deleteProperty")]),e._v("和"),n("code",[e._v("defineProperty")]),e._v("之类的陷阱。 除了闭包之外，这可能是最接近真正私有属性的方法，因为它们无法通过枚举，克隆，访问或修改来访问。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://segmentfault.com/img/bVbuSTv?w=975&h=62",alt:"clipboard.png"}})]),e._v(" "),n("p",[e._v("但是，它们在开发控制台中可见。 只有闭包才能免于这种命运。")]),e._v(" "),n("h2",{attrs:{id:"缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),n("p",[e._v("在客户端和服务器之间同步状态时遇到困难并不罕见。数据可能会随着时间的推移而发生变化，很难确切地知道何时重新同步的逻辑。")]),e._v(" "),n("p",[n("code",[e._v("Proxy")]),e._v("启用了一种新方法：根据需要将对象包装为无效（和重新同步）属性。 所有访问属性的尝试都首先检查缓存策略，该策略决定返回当前在内存中的内容还是采取其他一些操作。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const ephemeral = (target, ttl = 60) => {\n  const CREATED_AT = Date.now()\n  const isExpired = () => (Date.now() - CREATED_AT) > (ttl * 1000)\n  \n  return new Proxy(target, {\n    get: (obj, prop) => isExpired() ? undefined : Reflect.get(obj, prop)\n  })\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("这个函数过于简化了:它使对象上的所有属性在一段时间后都无法访问。然而，将此方法扩展为根据每个属性设置生存时间(TTL)，并在一定的持续时间或访问次数之后更新它并不困难。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let bankAccount = ephemeral({\n  balance: 14.93\n}, 10)\n\nconsole.log(bankAccount.balance)    // 14.93\n\nsetTimeout(() => {\n  console.log(bankAccount.balance)  // undefined\n}, 10 * 1000)\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("这个示例简单地使银行帐户余额在10秒后无法访问。")]),e._v(" "),n("h2",{attrs:{id:"枚举和只读视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举和只读视图"}},[e._v("#")]),e._v(" 枚举和只读视图")]),e._v(" "),n("p",[e._v("这些例子来自"),n("code",[e._v("Csaba Hellinge 关于[代理用例][23]和[Mozilla黑客][24]的文章。方法是包装一个对象以防止扩展或修改。虽然")]),e._v("object.freeze`现在提供了将对象渲染为只读的功能，但是可以对这种方法进行扩展，以便访问不存在属性的枚举对象能更好地处理抛出错误。")]),e._v(" "),n("h4",{attrs:{id:"只读视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#只读视图"}},[e._v("#")]),e._v(" "),n("strong",[e._v("只读视图")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const NOPE = () => {\n  throw new Error("Can\'t modify read-only view");\n}\n\nconst NOPE_HANDLER = {\n  set: NOPE,\n  defineProperty: NOPE,\n  deleteProperty: NOPE,\n  preventExtensions: NOPE,\n  setPrototypeOf: NOPE\n}\n\nconst readOnlyView = target =>\n  new Proxy(target, NOPE_HANDLER)\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("h4",{attrs:{id:"枚举视图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举视图"}},[e._v("#")]),e._v(" "),n("strong",[e._v("枚举视图")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const createEnum = (target) => readOnlyView(new Proxy(target, {\n  get: (obj, prop) => {\n    if (prop in obj) {\n      return Reflect.get(obj, prop)\n    }\n    throw new ReferenceError(`Unknown prop "${prop}"`)\n  }\n}))\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("现在我们可以创建一个"),n("code",[e._v("Object")]),e._v("，如果尝试访问不存在的属性现在不是返回"),n("code",[e._v("undefined")]),e._v("，而是会抛出异常。 这使得在早期捕获和解决问题变得更加容易。")]),e._v(" "),n("p",[e._v("我们的"),n("code",[e._v("enum")]),e._v("示例也是代理上的代理的第一个示例，它确认代理是另一个代理的有效目标对象。这通过组合代理功能促进了代码重用。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let SHIRT_SIZES = createEnum({\n  S: 10,\n  M: 15,\n  L: 20\n})\n\nSHIRT_SIZES.S // 10\nSHIRT_SIZES.S = 15\n\n// Uncaught Error: Can\'t modify read-only view\n\nSHIRT_SIZES.XL\n\n// Uncaught ReferenceError: Unknown prop "XL"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("这种方法可以进一步扩展，包括模拟方法"),n("code",[e._v("nameOf")]),e._v("，它返回给定"),n("code",[e._v("enum")]),e._v("值的属性名，模仿Javascript等语言中的行为。")]),e._v(" "),n("p",[e._v("虽然其他框架和语言超集(比如TypeScript)提供"),n("code",[e._v("enum")]),e._v("类型，但是这个解决方案的独特之处在于，它使用普通Javascript，而不使用特殊的构建工具或转置器。")]),e._v(" "),n("h2",{attrs:{id:"运算符重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符重载"}},[e._v("#")]),e._v(" 运算符重载")]),e._v(" "),n("p",[e._v("也许从语法上讲，最吸引人的 "),n("code",[e._v("Proxy")]),e._v(" 用例是重载操作符的能力，比如使用"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/has",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.has"),n("OutboundLink")],1),e._v("的"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in",target:"_blank",rel:"noopener noreferrer"}},[e._v("in"),n("OutboundLink")],1),e._v("操作符。")]),e._v(" "),n("p",[n("code",[e._v("in")]),e._v("操作符用于检查指定的属性是否位于指定的对象或其原型链中。但它也是语法上最优雅的重载操作符。这个例子定义了一个连续"),n("code",[e._v("range")]),e._v("函数来比较数字。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const range = (min, max) => new Proxy(Object.create(null), {\n  has: (_, prop) => (+prop >= min && +prop <= max)\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("与Python不同，Python使用生成器与有限的整数序列进行比较，这种方法支持十进制比较，可以扩展为支持其他数值范围。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const X = 10.5\nconst nums = [1, 5, X, 50, 100]\n\nif (X in range(1, 100)) { // true\n  // ...\n}\n\nnums.filter(n => n in range(1, 10)) // [1, 5]\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("尽管这个用例不能解决复杂的问题，但它确实提供了干净、可读和可重用的代码。")]),e._v(" "),n("p",[e._v("除了"),n("code",[e._v("in")]),e._v("运算符，我们还可以重载"),n("code",[e._v("delete")]),e._v("和"),n("code",[e._v("new")]),e._v("。")]),e._v(" "),n("h2",{attrs:{id:"cookie对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie对象"}},[e._v("#")]),e._v(" cookie对象")]),e._v(" "),n("p",[e._v("如果你曾经与"),n("code",[e._v("cookie")]),e._v("进行交互，那么必须处理"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie",target:"_blank",rel:"noopener noreferrer"}},[e._v("document.cookie"),n("OutboundLink")],1),e._v("。 这是一个不寻常的API，因为API是一个"),n("code",[e._v("String")]),e._v("，它读出所有"),n("code",[e._v("cookie")]),e._v("，以"),n("strong",[e._v("分号分隔")]),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("document.cookie")]),e._v("是一个看起来像这样的字符串：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("_octo=GH1.2.2591.47507; _ga=GA1.1.62208.4087; has_recent_activity=1\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("简而言之，处理"),n("code",[e._v("document.cookie")]),e._v("比较麻烦且容易出错。 一种方法是使用"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework",target:"_blank",rel:"noopener noreferrer"}},[e._v("简单的cookie框架"),n("OutboundLink")],1),e._v("，可以适用于使用 Proxy。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const getCookieObject = () => {\n    const cookies = document.cookie.split(';').reduce((cks, ck) => \n    ({[ck.substr(0, ck.indexOf('=')).trim()]: ck.substr(ck.indexOf('=') + 1), ...cks}), {});\n    const setCookie = (name, val) => document.cookie = `${name}=${val}`;\n    const deleteCookie = (name) => document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n\n    return new Proxy(cookies, {\n    set: (obj, prop, val) => (setCookie(prop, val), Reflect.set(obj, prop, val)),\n        deleteProperty: (obj, prop) => (deleteCookie(prop), Reflect.deleteProperty(obj, prop))\n     })\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("此函数返回一个键值对对象，但代理对"),n("code",[e._v("document.cookie")]),e._v("进行持久性的所有更改。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let docCookies = getCookieObject()\n\ndocCookies.has_recent_activity              // "1"\ndocCookies.has_recent_activity = "2"        // "2"\ndelete docCookies2["has_recent_activity"]   // true\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("在11行代码中，修改"),n("code",[e._v("cookie")]),e._v("提供了更好的交互，尽管在生产环境中还需要诸如字符串规范化之类的附加功能。")]),e._v(" "),n("p",[e._v("细节决定成败，Proxy 也不例外。")]),e._v(" "),n("h2",{attrs:{id:"polyfill"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#polyfill"}},[e._v("#")]),e._v(" Polyfill")]),e._v(" "),n("p",[e._v("在撰写本文时(2019年5月)，Proxy 没有"),n("strong",[e._v("完整的 polyfill")]),e._v("。然而，有一个由谷歌编写的 "),n("a",{attrs:{href:"https://github.com/GoogleChrome/proxy-polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("partial polyfill for Proxy"),n("OutboundLink")],1),e._v(" ，它支持"),n("code",[e._v("get")]),e._v("、"),n("code",[e._v("set")]),e._v("、"),n("code",[e._v("apply")]),e._v("和"),n("code",[e._v("construct trap")]),e._v("，并适用于IE9+。")]),e._v(" "),n("h4",{attrs:{id:"它是-proxy-吗？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#它是-proxy-吗？"}},[e._v("#")]),e._v(" 它是 Proxy 吗？")]),e._v(" "),n("blockquote",[n("p",[e._v("确定一个对象是否是代理是不可能的")])]),e._v(" "),n("p",[e._v("根据Javascript语言规范，无法确定对象是否是代理。 但是，在 Node 10+上，可以使用"),n("a",{attrs:{href:"https://nodejs.org/api/util.html#util_util_types_isproxy_value",target:"_blank",rel:"noopener noreferrer"}},[e._v("util.types.isProxy"),n("OutboundLink")],1),e._v("方法。")]),e._v(" "),n("h4",{attrs:{id:"目标是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目标是什么？"}},[e._v("#")]),e._v(" 目标是什么？")]),e._v(" "),n("p",[e._v("给定一个代理对象，就不可能获得或更改目标对象。也不可能获取或修改处理程序对象。")]),e._v(" "),n("p",[e._v("最近似的是Ben Nadel的文章"),n("a",{attrs:{href:"https://www.bennadel.com/blog/3262-using-proxy-objects-to-dynamically-change-the-this-binding-within-a-generator-in-node-js.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Proxy to Dynamically Change THIS Binding"),n("OutboundLink")],1),e._v("，它使用一个空对象作为"),n("code",[e._v("Proxy")]),e._v("目标和闭包来巧妙地重新分配对象的"),n("code",[e._v("Proxy")]),e._v("操作。")]),e._v(" "),n("h4",{attrs:{id:"proxy-原语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-原语"}},[e._v("#")]),e._v(" Proxy 原语")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('new Proxy("To be, or not to be...", { })\n\n// TypeError: Cannot create proxy with a non-object as target or handler\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("不幸的是，Proxy的一个限制是目标必须是Object。 这意味着我们不能直接使用像String这样的原语。 😞")]),e._v(" "),n("h4",{attrs:{id:"性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[e._v("#")]),e._v(" 性能")]),e._v(" "),n("p",[e._v("Proxy的一个主要缺点是性能。 因浏览器和使用而异，但是对于性能有要求的代码来说，代理不是最好的方法。 当然，可以衡量影响并确定代理的优势是否超过对性能的影响。")]),e._v(" "),n("h2",{attrs:{id:"为什么要使用-proxy？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用-proxy？"}},[e._v("#")]),e._v(" 为什么要使用 Proxy？")]),e._v(" "),n("p",[e._v("Proxy 提供虚拟化接口来控制任何目标 Object的行为。 这样做可以在简单性和实用性之间取得平衡，而不会牺牲兼容性。")]),e._v(" "),n("p",[e._v("也许使用"),n("code",[e._v("Proxy")]),e._v("的最令人信服的理由是，上面的许多示例只有几行，并且可以轻松组合以创建复杂的功能。 最后一个例子，我们可以从几个用例中组合函数来创建一个只读"),n("code",[e._v("cookie")]),e._v("对象，该对象返回不存在或“私有”隐藏cookie的默认值。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// document.cookie = "_octo=GH1.2.2591.47507; _ga=GA1.1.62208.4087; has_recent_activity=1"\n\nlet docCookies = withZeroValue(hide(readOnlyView(getCookieObject())), "Cookie not found")\n\ndocCookies.has_recent_activity  // "1"\ndocCookies.nonExistentCookie    // "Cookie not found"\ndocCookies._ga                  // "Cookie not found"\ndocCookies.newCookie = "1"      // Uncaught Error: Can\'t modify read-only view\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("我希望这些例子已经表明，对于Javascript中的小众元编程来说，代理不仅仅是一个深奥的特性。"),n("strong",[e._v("为了保证的可读性，本文采用意译而非直译。")])]),e._v(" "),n("h2",{attrs:{id:"proxy-介绍-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-介绍-2"}},[e._v("#")]),e._v(" Proxy 介绍")]),e._v(" "),n("p",[e._v("使用"),n("code",[e._v("Proxy")]),e._v("，你可以将一只猫伪装成一只老虎。下面大约有6个例子，我希望它们能让你相信，Proxy 提供了强大的 Javascript 元编程。")]),e._v(" "),n("p",[e._v("尽管它不像其他ES6功能用的普遍，但"),n("code",[e._v("Proxy")]),e._v("有许多用途，包括"),n("a",{attrs:{href:"https://hackernoon.com/introducing-javascript-es6-proxies-1327419ab413",target:"_blank",rel:"noopener noreferrer"}},[e._v("运算符重载"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Mock_object",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象模拟"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://medium.com/dailyjs/how-to-use-javascript-proxies-for-fun-and-profit-365579d4a9f8",target:"_blank",rel:"noopener noreferrer"}},[e._v("简洁而灵活的API创建"),n("OutboundLink")],1),e._v("，"),n("a",{attrs:{href:"https://github.com/sindresorhus/on-change",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象变化事件"),n("OutboundLink")],1),e._v("，甚至"),n("a",{attrs:{href:"https://medium.com/@gustojs/vuejs-3-and-other-top-news-from-q-a-event-with-core-vue-devs-c9834946ae7b",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 3背后的内部响应系统提供动力"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("Proxy")]),e._v("用于修改某些操作的默认行为，也可以理解为在目标对象之前架设一层拦截，外部所有的访问都必须先通过这层拦截，因此提供了一种机制，可以对外部的访问进行过滤和修改。这个词的原理为代理，在这里可以表示由它来“代理”某些操作，译为“代理器”。")]),e._v(" "),n("p",[e._v("ES6原生提供了"),n("code",[e._v("Proxy")]),e._v("构造函数，用来生成"),n("code",[e._v("Proxy")]),e._v("实例。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var proxy = new Proxy(target, handler);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("code",[e._v("Proxy")]),e._v("对象的所有用法，都是上面的这种形式。不同的只是"),n("code",[e._v("handle")]),e._v("参数的写法。其中"),n("code",[e._v("new Proxy")]),e._v("用来生成"),n("code",[e._v("Proxy")]),e._v("实例，"),n("code",[e._v("target")]),e._v("是表示所要拦截的对象，"),n("code",[e._v("handle")]),e._v("是用来定制拦截行为的对象。")]),e._v(" "),n("p",[e._v("下面是 Proxy 最简单的例子是，这是一个有陷阱的代理，一个"),n("code",[e._v("get")]),e._v("陷阱，总是返回"),n("code",[e._v("42")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let target = {\n  x: 10,\n  y: 20\n}\n\nlet hanler = {\n  get: (obj, prop) => 42\n}\n\ntarget = new Proxy(target, hanler)\n\ntarget.x //42\ntarget.y //42\ntarget.x // 42\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("结果是一个对象将为任何属性访问操作都返回“42”。 这包括"),n("code",[e._v("target.x")]),e._v("，"),n("code",[e._v("target['x']")]),e._v("，"),n("code",[e._v("Reflect.get(target, 'x')")]),e._v("等。")]),e._v(" "),n("p",[e._v("但是，Proxy 陷阱当然不限于属性的读取。 它只是十几个不同陷阱中的一个：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.get"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/set",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.set"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/has",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.has"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/apply",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.apply"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/construct",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.construct"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/ownKeys",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.ownKeys"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/deleteProperty",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.deleteProperty"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.defineProperty"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.isExtensible"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/preventExtensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.preventExtensions"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.getPrototypeOf"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/setPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.setPrototypeOf"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.getOwnPropertyDescriptor"),n("OutboundLink")],1)])]),e._v(" "),n("h2",{attrs:{id:"proxy-用例-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-用例-2"}},[e._v("#")]),e._v(" Proxy 用例")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://segmentfault.com/img/bVbuRz3?w=697&h=344",alt:"clipboard.png"}})]),e._v(" "),n("h4",{attrs:{id:"默认值-“零值”-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认值-“零值”-2"}},[e._v("#")]),e._v(" "),n("strong",[e._v("默认值/“零值”")])]),e._v(" "),n("p",[e._v("在 Go 语言中，有"),n("a",{attrs:{href:"https://tour.golang.org/basics/12",target:"_blank",rel:"noopener noreferrer"}},[e._v("零值"),n("OutboundLink")],1),e._v("的概念，零值是特定于类型的隐式默认结构值。其思想是提供类型安全的默认基元值，或者用gopher的话说，给结构一个有用的零值。")]),e._v(" "),n("p",[e._v("虽然不同的创建模式支持类似的功能，但Javascript无法用隐式初始值包装对象。Javascript中未设置属性的默认值是"),n("code",[e._v("undefined")]),e._v("。但 Proxy 可以改变这种情况。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const withZeroValue = (target, zeroValue) => new Proxy(target, {\n  get: (obj, prop) => (prop in obj) ? obj[prop] : zeroValue\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("函数"),n("code",[e._v("withZeroValue")]),e._v(" 用来包装目标对象。 如果设置了属性，则返回属性值。 否则，它返回一个默认的**“零值”**。")]),e._v(" "),n("p",[e._v("从技术上讲，这种方法也不是隐含的，但如果我们扩展"),n("code",[e._v("withZeroValue")]),e._v("，以Boolean ("),n("code",[e._v("false")]),e._v("), Number ("),n("code",[e._v("0")]),e._v("), String ("),n("code",[e._v('""')]),e._v("), Object ("),n("code",[e._v("{}")]),e._v(")，Array ("),n("code",[e._v("[]")]),e._v(")等对应的零值，则可能是隐含的。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let pos = {\n  x: 4,\n  y: 19\n}\n\nconsole.log(pos.x, pos.y, pos.z) // 4, 19, undefined\n\npos = withZeroValue(pos, 0)\n\nconsole.log(pos.z, pos.y, pos.z) // 4, 19, 0\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("此功能可能有用的一个地方是坐标系。 绘图库可以基于数据的形状自动支持2D和3D渲染。 不是创建两个单独的模型，而是始终将"),n("code",[e._v("z")]),e._v("默认为 "),n("code",[e._v("0")]),e._v(" 而不是"),n("code",[e._v("undefined")]),e._v("，这可能是有意义的。")]),e._v(" "),n("h2",{attrs:{id:"负索引数组-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#负索引数组-2"}},[e._v("#")]),e._v(" 负索引数组")]),e._v(" "),n("p",[e._v("在JS中获取数组中的最后一个元素方式通过写的很冗长且重复，也容易出错。 这就是为什么有一个TC39提案定义了一个便利属性"),n("code",[e._v("Array.lastItem")]),e._v("来获取和设置最后一个元素。")]),e._v(" "),n("p",[e._v("其他语言，如Python和Ruby，使用负组索引更容易访问最后面的元素。例如，可以简单地使用"),n("code",[e._v("arr[-1]")]),e._v("替代"),n("code",[e._v("arr[arr.length-1]")]),e._v("访问最后一个元素。")]),e._v(" "),n("p",[e._v("使用 Proxy 也可以在 Javascript 中使用负索引。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const negativeArray = (els) => new Proxy(els, {\n  get: (target, propKey, receiver) => Reflect.get(target,\n    (+propKey < 0) ? String(target.length + +propKey) : propKey, receiver)\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("一个重要的注意事项是包含"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.get"),n("OutboundLink")],1),e._v("的陷阱字符串化所有属性。 对于数组访问，我们需要将属性名称强制转换为"),n("code",[e._v("Numbers")]),e._v("，这样就可以使用一元加运算符简洁地完成。")]),e._v(" "),n("p",[e._v("现在"),n("code",[e._v("[-1]")]),e._v("访问最后一个元素，"),n("code",[e._v("[-2]")]),e._v("访问倒数第二个元素，以此类推。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const unicorn = negativeArray(['🐴', '🎂', '🌈']);\n\nunicorn[-1] // '🌈'\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h2",{attrs:{id:"隐藏属性-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐藏属性-2"}},[e._v("#")]),e._v(" 隐藏属性")]),e._v(" "),n("p",[e._v("众所周知 JS 没有私有属性。 "),n("code",[e._v("Symbol")]),e._v("最初是为了"),n("a",{attrs:{href:"https://codeburst.io/a-practical-guide-to-es6-symbol-3fc90117c7ac",target:"_blank",rel:"noopener noreferrer"}},[e._v("启用私有属性而引入的"),n("OutboundLink")],1),e._v("，但后来使用像"),n("code",[e._v("Object.getOwnPropertySymbols")]),e._v("这样的反射方法进行了淡化，这使得它们可以被公开发现。")]),e._v(" "),n("p",[e._v("长期以来的惯例是将私有属性命名为前下划线"),n("code",[e._v("_")]),e._v("，有效地标记它们“不要访问”。"),n("code",[e._v("Prox")]),e._v(" 提供了一种稍微更好的方法来屏蔽这些属性。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const hide = (target, prefix = '_') => new Proxy(target, {\n  has: (obj, prop) => (!prop.startsWith(prefix) && prop in obj),\n  ownKeys: (obj) => Reflect.ownKeys(obj)\n    .filter(prop => (typeof prop !== \"string\" || !prop.startsWith(prefix))),\n  get: (obj, prop, rec) => (prop in rec) ? obj[prop] : undefined\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[n("code",[e._v("hide")]),e._v("函数包装目标对象，并使得从"),n("code",[e._v("in")]),e._v("运算符和"),n("code",[e._v("Object.getOwnPropertyNames")]),e._v("等方法无法访问带有下划线的属性。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let userData = hide({\n  firstName: 'Tom',\n  mediumHandle: '@tbarrasso',\n  _favoriteRapper: 'Drake'\n})\n\nuserData._favoriteRapper        // undefined\n('_favoriteRapper' in userData) // false\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("更完整的实现还包括诸如"),n("code",[e._v("deleteProperty")]),e._v("和"),n("code",[e._v("defineProperty")]),e._v("之类的陷阱。 除了闭包之外，这可能是最接近真正私有属性的方法，因为它们无法通过枚举，克隆，访问或修改来访问。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://segmentfault.com/img/bVbuSTv?w=975&h=62",alt:"clipboard.png"}})]),e._v(" "),n("p",[e._v("但是，它们在开发控制台中可见。 只有闭包才能免于这种命运。")]),e._v(" "),n("h2",{attrs:{id:"缓存-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存-2"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),n("p",[e._v("在客户端和服务器之间同步状态时遇到困难并不罕见。数据可能会随着时间的推移而发生变化，很难确切地知道何时重新同步的逻辑。")]),e._v(" "),n("p",[n("code",[e._v("Proxy")]),e._v("启用了一种新方法：根据需要将对象包装为无效（和重新同步）属性。 所有访问属性的尝试都首先检查缓存策略，该策略决定返回当前在内存中的内容还是采取其他一些操作。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const ephemeral = (target, ttl = 60) => {\n  const CREATED_AT = Date.now()\n  const isExpired = () => (Date.now() - CREATED_AT) > (ttl * 1000)\n  \n  return new Proxy(target, {\n    get: (obj, prop) => isExpired() ? undefined : Reflect.get(obj, prop)\n  })\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("这个函数过于简化了:它使对象上的所有属性在一段时间后都无法访问。然而，将此方法扩展为根据每个属性设置生存时间(TTL)，并在一定的持续时间或访问次数之后更新它并不困难。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let bankAccount = ephemeral({\n  balance: 14.93\n}, 10)\n\nconsole.log(bankAccount.balance)    // 14.93\n\nsetTimeout(() => {\n  console.log(bankAccount.balance)  // undefined\n}, 10 * 1000)\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("这个示例简单地使银行帐户余额在10秒后无法访问。")]),e._v(" "),n("h2",{attrs:{id:"枚举和只读视图-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举和只读视图-2"}},[e._v("#")]),e._v(" 枚举和只读视图")]),e._v(" "),n("p",[e._v("这些例子来自"),n("code",[e._v("Csaba Hellinge 关于[代理用例][23]和[Mozilla黑客][24]的文章。方法是包装一个对象以防止扩展或修改。虽然")]),e._v("object.freeze`现在提供了将对象渲染为只读的功能，但是可以对这种方法进行扩展，以便访问不存在属性的枚举对象能更好地处理抛出错误。")]),e._v(" "),n("h4",{attrs:{id:"只读视图-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#只读视图-2"}},[e._v("#")]),e._v(" "),n("strong",[e._v("只读视图")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const NOPE = () => {\n  throw new Error("Can\'t modify read-only view");\n}\n\nconst NOPE_HANDLER = {\n  set: NOPE,\n  defineProperty: NOPE,\n  deleteProperty: NOPE,\n  preventExtensions: NOPE,\n  setPrototypeOf: NOPE\n}\n\nconst readOnlyView = target =>\n  new Proxy(target, NOPE_HANDLER)\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("h4",{attrs:{id:"枚举视图-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举视图-2"}},[e._v("#")]),e._v(" "),n("strong",[e._v("枚举视图")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const createEnum = (target) => readOnlyView(new Proxy(target, {\n  get: (obj, prop) => {\n    if (prop in obj) {\n      return Reflect.get(obj, prop)\n    }\n    throw new ReferenceError(`Unknown prop "${prop}"`)\n  }\n}))\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("现在我们可以创建一个"),n("code",[e._v("Object")]),e._v("，如果尝试访问不存在的属性现在不是返回"),n("code",[e._v("undefined")]),e._v("，而是会抛出异常。 这使得在早期捕获和解决问题变得更加容易。")]),e._v(" "),n("p",[e._v("我们的"),n("code",[e._v("enum")]),e._v("示例也是代理上的代理的第一个示例，它确认代理是另一个代理的有效目标对象。这通过组合代理功能促进了代码重用。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let SHIRT_SIZES = createEnum({\n  S: 10,\n  M: 15,\n  L: 20\n})\n\nSHIRT_SIZES.S // 10\nSHIRT_SIZES.S = 15\n\n// Uncaught Error: Can\'t modify read-only view\n\nSHIRT_SIZES.XL\n\n// Uncaught ReferenceError: Unknown prop "XL"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("这种方法可以进一步扩展，包括模拟方法"),n("code",[e._v("nameOf")]),e._v("，它返回给定"),n("code",[e._v("enum")]),e._v("值的属性名，模仿Javascript等语言中的行为。")]),e._v(" "),n("p",[e._v("虽然其他框架和语言超集(比如TypeScript)提供"),n("code",[e._v("enum")]),e._v("类型，但是这个解决方案的独特之处在于，它使用普通Javascript，而不使用特殊的构建工具或转置器。")]),e._v(" "),n("h2",{attrs:{id:"运算符重载-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运算符重载-2"}},[e._v("#")]),e._v(" 运算符重载")]),e._v(" "),n("p",[e._v("也许从语法上讲，最吸引人的 "),n("code",[e._v("Proxy")]),e._v(" 用例是重载操作符的能力，比如使用"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/has",target:"_blank",rel:"noopener noreferrer"}},[e._v("handler.has"),n("OutboundLink")],1),e._v("的"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in",target:"_blank",rel:"noopener noreferrer"}},[e._v("in"),n("OutboundLink")],1),e._v("操作符。")]),e._v(" "),n("p",[n("code",[e._v("in")]),e._v("操作符用于检查指定的属性是否位于指定的对象或其原型链中。但它也是语法上最优雅的重载操作符。这个例子定义了一个连续"),n("code",[e._v("range")]),e._v("函数来比较数字。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const range = (min, max) => new Proxy(Object.create(null), {\n  has: (_, prop) => (+prop >= min && +prop <= max)\n})\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("与Python不同，Python使用生成器与有限的整数序列进行比较，这种方法支持十进制比较，可以扩展为支持其他数值范围。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const X = 10.5\nconst nums = [1, 5, X, 50, 100]\n\nif (X in range(1, 100)) { // true\n  // ...\n}\n\nnums.filter(n => n in range(1, 10)) // [1, 5]\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("尽管这个用例不能解决复杂的问题，但它确实提供了干净、可读和可重用的代码。")]),e._v(" "),n("p",[e._v("除了"),n("code",[e._v("in")]),e._v("运算符，我们还可以重载"),n("code",[e._v("delete")]),e._v("和"),n("code",[e._v("new")]),e._v("。")]),e._v(" "),n("h2",{attrs:{id:"cookie对象-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie对象-2"}},[e._v("#")]),e._v(" cookie对象")]),e._v(" "),n("p",[e._v("如果你曾经与"),n("code",[e._v("cookie")]),e._v("进行交互，那么必须处理"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie",target:"_blank",rel:"noopener noreferrer"}},[e._v("document.cookie"),n("OutboundLink")],1),e._v("。 这是一个不寻常的API，因为API是一个"),n("code",[e._v("String")]),e._v("，它读出所有"),n("code",[e._v("cookie")]),e._v("，以"),n("strong",[e._v("分号分隔")]),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("document.cookie")]),e._v("是一个看起来像这样的字符串：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("_octo=GH1.2.2591.47507; _ga=GA1.1.62208.4087; has_recent_activity=1\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("简而言之，处理"),n("code",[e._v("document.cookie")]),e._v("比较麻烦且容易出错。 一种方法是使用"),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework",target:"_blank",rel:"noopener noreferrer"}},[e._v("简单的cookie框架"),n("OutboundLink")],1),e._v("，可以适用于使用 Proxy。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const getCookieObject = () => {\n    const cookies = document.cookie.split(';').reduce((cks, ck) => \n    ({[ck.substr(0, ck.indexOf('=')).trim()]: ck.substr(ck.indexOf('=') + 1), ...cks}), {});\n    const setCookie = (name, val) => document.cookie = `${name}=${val}`;\n    const deleteCookie = (name) => document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n\n    return new Proxy(cookies, {\n    set: (obj, prop, val) => (setCookie(prop, val), Reflect.set(obj, prop, val)),\n        deleteProperty: (obj, prop) => (deleteCookie(prop), Reflect.deleteProperty(obj, prop))\n     })\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("此函数返回一个键值对对象，但代理对"),n("code",[e._v("document.cookie")]),e._v("进行持久性的所有更改。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let docCookies = getCookieObject()\n\ndocCookies.has_recent_activity              // "1"\ndocCookies.has_recent_activity = "2"        // "2"\ndelete docCookies2["has_recent_activity"]   // true\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("在11行代码中，修改"),n("code",[e._v("cookie")]),e._v("提供了更好的交互，尽管在生产环境中还需要诸如字符串规范化之类的附加功能。")]),e._v(" "),n("p",[e._v("细节决定成败，Proxy 也不例外。")]),e._v(" "),n("h2",{attrs:{id:"polyfill-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#polyfill-2"}},[e._v("#")]),e._v(" Polyfill")]),e._v(" "),n("p",[e._v("在撰写本文时(2019年5月)，Proxy 没有"),n("strong",[e._v("完整的 polyfill")]),e._v("。然而，有一个由谷歌编写的 "),n("a",{attrs:{href:"https://github.com/GoogleChrome/proxy-polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("partial polyfill for Proxy"),n("OutboundLink")],1),e._v(" ，它支持"),n("code",[e._v("get")]),e._v("、"),n("code",[e._v("set")]),e._v("、"),n("code",[e._v("apply")]),e._v("和"),n("code",[e._v("construct trap")]),e._v("，并适用于IE9+。")]),e._v(" "),n("h4",{attrs:{id:"它是-proxy-吗？-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#它是-proxy-吗？-2"}},[e._v("#")]),e._v(" 它是 Proxy 吗？")]),e._v(" "),n("blockquote",[n("p",[e._v("确定一个对象是否是代理是不可能的")])]),e._v(" "),n("p",[e._v("根据Javascript语言规范，无法确定对象是否是代理。 但是，在 Node 10+上，可以使用"),n("a",{attrs:{href:"https://nodejs.org/api/util.html#util_util_types_isproxy_value",target:"_blank",rel:"noopener noreferrer"}},[e._v("util.types.isProxy"),n("OutboundLink")],1),e._v("方法。")]),e._v(" "),n("h4",{attrs:{id:"目标是什么？-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目标是什么？-2"}},[e._v("#")]),e._v(" 目标是什么？")]),e._v(" "),n("p",[e._v("给定一个代理对象，就不可能获得或更改目标对象。也不可能获取或修改处理程序对象。")]),e._v(" "),n("p",[e._v("最近似的是Ben Nadel的文章"),n("a",{attrs:{href:"https://www.bennadel.com/blog/3262-using-proxy-objects-to-dynamically-change-the-this-binding-within-a-generator-in-node-js.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Proxy to Dynamically Change THIS Binding"),n("OutboundLink")],1),e._v("，它使用一个空对象作为"),n("code",[e._v("Proxy")]),e._v("目标和闭包来巧妙地重新分配对象的"),n("code",[e._v("Proxy")]),e._v("操作。")]),e._v(" "),n("h4",{attrs:{id:"proxy-原语-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proxy-原语-2"}},[e._v("#")]),e._v(" Proxy 原语")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('new Proxy("To be, or not to be...", { })\n\n// TypeError: Cannot create proxy with a non-object as target or handler\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("不幸的是，Proxy的一个限制是目标必须是Object。 这意味着我们不能直接使用像String这样的原语。 😞")]),e._v(" "),n("h4",{attrs:{id:"性能-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能-2"}},[e._v("#")]),e._v(" 性能")]),e._v(" "),n("p",[e._v("Proxy的一个主要缺点是性能。 因浏览器和使用而异，但是对于性能有要求的代码来说，代理不是最好的方法。 当然，可以衡量影响并确定代理的优势是否超过对性能的影响。")]),e._v(" "),n("h2",{attrs:{id:"为什么要使用-proxy？-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用-proxy？-2"}},[e._v("#")]),e._v(" 为什么要使用 Proxy？")]),e._v(" "),n("p",[e._v("Proxy 提供虚拟化接口来控制任何目标 Object的行为。 这样做可以在简单性和实用性之间取得平衡，而不会牺牲兼容性。")]),e._v(" "),n("p",[e._v("也许使用"),n("code",[e._v("Proxy")]),e._v("的最令人信服的理由是，上面的许多示例只有几行，并且可以轻松组合以创建复杂的功能。 最后一个例子，我们可以从几个用例中组合函数来创建一个只读"),n("code",[e._v("cookie")]),e._v("对象，该对象返回不存在或“私有”隐藏cookie的默认值。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// document.cookie = "_octo=GH1.2.2591.47507; _ga=GA1.1.62208.4087; has_recent_activity=1"\n\nlet docCookies = withZeroValue(hide(readOnlyView(getCookieObject())), "Cookie not found")\n\ndocCookies.has_recent_activity  // "1"\ndocCookies.nonExistentCookie    // "Cookie not found"\ndocCookies._ga                  // "Cookie not found"\ndocCookies.newCookie = "1"      // Uncaught Error: Can\'t modify read-only view\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("我希望这些例子已经表明，对于Javascript中的小众元编程来说，代理不仅仅是一个深奥的特性。")])])}),[],!1,null,null,null);r.default=s.exports}}]);